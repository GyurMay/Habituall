[{"/Users/gyurmeydorj/Habituall/client/src/index.js":"1","/Users/gyurmeydorj/Habituall/client/src/reportWebVitals.js":"2","/Users/gyurmeydorj/Habituall/client/src/App.js":"3","/Users/gyurmeydorj/Habituall/client/src/pages/HabitFormPage.js":"4","/Users/gyurmeydorj/Habituall/client/src/pages/Feed.js":"5","/Users/gyurmeydorj/Habituall/client/src/pages/Profile.js":"6","/Users/gyurmeydorj/Habituall/client/src/pages/AboutUsPage.js":"7","/Users/gyurmeydorj/Habituall/client/src/pages/LoginPage.js":"8","/Users/gyurmeydorj/Habituall/client/src/pages/ShowHabitPage.js":"9","/Users/gyurmeydorj/Habituall/client/src/components/NavBar.js":"10","/Users/gyurmeydorj/Habituall/client/src/components/PrivateRoute.js":"11","/Users/gyurmeydorj/Habituall/client/src/components/UserProfile.js":"12","/Users/gyurmeydorj/Habituall/client/src/components/Search.js":"13","/Users/gyurmeydorj/Habituall/client/src/components/ShowHabitsForeign.js":"14","/Users/gyurmeydorj/Habituall/client/src/context/AuthContext.js":"15","/Users/gyurmeydorj/Habituall/client/src/context/SharedContext.js":"16","/Users/gyurmeydorj/Habituall/client/src/clientDotEnv.js":"17","/Users/gyurmeydorj/Habituall/client/src/components/FeedPost.js":"18","/Users/gyurmeydorj/Habituall/client/src/components/CalendarComp.js":"19","/Users/gyurmeydorj/Habituall/client/src/components/AuthButton.js":"20","/Users/gyurmeydorj/Habituall/client/src/components/CommentElem.js":"21","/Users/gyurmeydorj/Habituall/client/src/components/styleComponents.js":"22","/Users/gyurmeydorj/Habituall/client/src/services/habitService.js":"23","/Users/gyurmeydorj/Habituall/client/src/components/icons/TrashIcon.js":"24"},{"size":535,"mtime":1699908865608,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1699908865608,"results":"27","hashOfConfig":"26"},{"size":2907,"mtime":1721104470727,"results":"28","hashOfConfig":"26"},{"size":3689,"mtime":1720847805001,"results":"29","hashOfConfig":"26"},{"size":690,"mtime":1721254412937,"results":"30","hashOfConfig":"26"},{"size":4522,"mtime":1721314769301,"results":"31","hashOfConfig":"26"},{"size":102,"mtime":1699908865608,"results":"32","hashOfConfig":"26"},{"size":3402,"mtime":1721312559206,"results":"33","hashOfConfig":"26"},{"size":11044,"mtime":1721324109089,"results":"34","hashOfConfig":"26"},{"size":8191,"mtime":1720839328955,"results":"35","hashOfConfig":"26"},{"size":1693,"mtime":1719883600691,"results":"36","hashOfConfig":"26"},{"size":4526,"mtime":1721314251191,"results":"37","hashOfConfig":"26"},{"size":1826,"mtime":1721175835968,"results":"38","hashOfConfig":"26"},{"size":5314,"mtime":1721275589213,"results":"39","hashOfConfig":"26"},{"size":2989,"mtime":1720624847906,"results":"40","hashOfConfig":"26"},{"size":2432,"mtime":1720641854836,"results":"41","hashOfConfig":"26"},{"size":63,"mtime":1721330501688,"results":"42","hashOfConfig":"26"},{"size":1171,"mtime":1721269209681,"results":"43","hashOfConfig":"26"},{"size":1987,"mtime":1721324241812,"results":"44","hashOfConfig":"26"},{"size":750,"mtime":1721265652590,"results":"45","hashOfConfig":"26"},{"size":4563,"mtime":1721311430180,"results":"46","hashOfConfig":"26"},{"size":493,"mtime":1720638193245,"results":"47","hashOfConfig":"26"},{"size":5205,"mtime":1720847703100,"results":"48","hashOfConfig":"26"},{"size":1699,"mtime":1720587509911,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bsilyp",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},"/Users/gyurmeydorj/Habituall/client/src/index.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/reportWebVitals.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/App.js",["136","137","138","139"],[],"import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link, NavLink, Navigate } from \"react-router-dom\";\nimport AboutUsPage from \"./pages/AboutUsPage\";\n// import AboutUsPage from \"./pages/AboutUsPage\";\nimport \"./App.css\";\nimport HabitFormPage from \"./pages/HabitFormPage\";\nimport Feed from \"./pages/Feed\";\nimport {ShowHabitPage} from \"./pages/ShowHabitPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport PrivateRoute from './components/PrivateRoute';\nimport { AuthProvider } from \"./context/AuthContext\";\n\nimport {NavBar, ExpandMenuBtn} from \"./components/NavBar\";\nimport Profile from \"./pages/Profile\";\nimport { SharedProvider } from \"./context/SharedContext\";\nimport { Search } from \"./components/Search\";\nimport UserProfile from \"./components/UserProfile\";\nimport ShowHabitsForeign from \"./components/ShowHabitsForeign\";\n\nfunction Navigation(props) {\n  return (\n<>\n<NavBar />\n    {/* <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark shadow mb-3\">\n      <div className=\"container-fluid\">\n        <ExpandMenuBtn />\n        <Link className=\"navbar-brand\" to=\"/\">\n          Home\n        </Link>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/habits/new\">\n              Create\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/about-us\">\n              About Us\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <AuthButton style={{}} />\n          </li>\n        </ul>\n      </div>\n    </nav> */}\n    </>\n  );\n \n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n    <BrowserRouter>\n    <SharedProvider>\n    <div id=\"main\">\n      <NavBar />\n      {/* <NavBar /> */}\n      <div className=\"container-xl text-center\">\n        <div className=\"row justify-content-center\">\n          <Search />\n          <Routes>\n            <Route path=\"/habits/:id\" element={<PrivateRoute><ShowHabitPage /></PrivateRoute>} />\n            <Route path=\"/\" element={<PrivateRoute><Feed /></PrivateRoute>}  />\n            <Route path=\"/create/:makeHabit\" element={<PrivateRoute><HabitFormPage /></PrivateRoute>} />\n            <Route path=\"/profile\" element={<PrivateRoute><Profile /></PrivateRoute>} />\n            <Route path=\"/users/:username\" element={<PrivateRoute><UserProfile /></PrivateRoute>} />\n            <Route path=\"/users/:username/habits/:makeHabit\" element={<PrivateRoute><ShowHabitsForeign /></PrivateRoute>} />\n             \n            {/** public routes */}\n            <Route path=\"/about-us\" element={<AboutUsPage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            \n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n    </SharedProvider>\n    </BrowserRouter>\n    </AuthProvider>\n  );\n}\n\nexport default App;","/Users/gyurmeydorj/Habituall/client/src/pages/HabitFormPage.js",["140","141"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { backendAPI } from \"../clientDotEnv\";\r\nimport habitService from \"../services/habitService\";\r\n\r\n\r\nexport default function HabitFormPage(props){\r\n\r\n  const params = useParams();\r\n  const auth = useAuth();  \r\n\r\n  const [mh, setMh] = useState(params.makeHabit);\r\n  const [bh, setBh] = useState(\"\");\r\n    // useState\r\n  const [fdd, setFdd] = useState(\"\");\r\n  const [habitError, setHabitError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMh(params.makeHabit); setBh(\"\"); setFdd(\"\");\r\n  }, [params])\r\n  \r\n  const handleChange = (event) => {\r\n    setBh(document.querySelector(\"#fbh\").value);\r\n    setMh(document.querySelector(\"#fmh\").value);\r\n    setFdd(document.querySelector(\"#fdd\").value);\r\n  }\r\n  let host = backendAPI;\r\n\r\n  // host = 'http://192.168.1.147:3001' // comment if workign on same pc\r\n  // host = \"http://\"+require(\"os\").networkInterfaces()['en0'][1].address+\":3001\"; // comment line if not working on separate window\r\n  const navigate = useNavigate();\r\n  const createHabit = async (jsonObj) => {\r\n    //makeRequest\r\n    try{\r\n\r\n      const response = await habitService.createNewHabit(jsonObj);\r\n      // console.log(\"resp\", response);\r\n\r\n      if(!response.ok){\r\n        setHabitError(true);\r\n        throw new Error(\"Can't create Habit\");\r\n      }\r\n      // setNavLink()\r\n      navigate('/habits/'+jsonObj.makeHabit);\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\nfunction handleSubmit(event){\r\n    event.preventDefault();\r\n    if(mh === '' || bh === '' || fdd === '') return\r\n\r\n    // let daysRemaining = parseInt((((new Date(fdd)) - new Date())) / 1000 / 60/ 60 / 24) + 1;\r\n    // const date = new Date(fdd);\r\n    // console.log(date, \"dates  \")\r\n    // let lastId = document.querySelector('#navHabitList').lastElementChild.previousElementSibling.previousElementSibling.id.slice(1);\r\n    // let habitId = parseInt(lastId) + 1;\r\n    // console.log(habitId, mh, bh, daysRemaining)\r\n    const habitObj = {\r\n          makeHabit: mh,\r\n          breakHabit: bh,\r\n          dueDate: fdd.replaceAll('-', ' '),\r\n          createDate: (new Date()).toDateString()\r\n    }\r\n    console.log(habitObj);\r\n\r\n    createHabit(habitObj);\r\n    // let currLatestId = 103;\r\n\r\n    //make request to DB/backend and refresh\r\n    // makeDbRequest(mh, bh, fdd, parseInt(currLatestId));\r\n    //document.location.href = `http://${document.location.host}`;\r\n}\r\n\r\n    return (\r\n        <>\r\n        <div id=\"main\">\r\n            <div id=\"container\" className=\"text-center\">\r\n                <div id=\"createForm\" className=\"text-4xl\">\r\n                    <h1><strong>Create a New Habit</strong></h1><br />\r\n                    {habitError && (<p className=\"text-danger\">error: cant create habit</p>)}\r\n                    <h3>Make Habit: <input id=\"fmh\" name=\"makeHabit\" className=\"border-2 border-b-gray-700\" value={mh} onChange={handleChange}></input></h3>\r\n                    <h3>Break Habit: <input id=\"fbh\" name=\"breakHabit\" className=\"border-2 border-b-gray-700\" onChange={handleChange}></input></h3>\r\n                    <h3>Get done by: <input id=\"fdd\" name=\"dueDate\" type=\"date\" onChange={handleChange}></input></h3>\r\n                    {/* { (document.querySelector(\"#fmh\").value.length > 0) && (document.querySelector(\"#fbh\").value.length > 0) && (document.querySelector(\"#fdd\").value.length > 0) && ( */}\r\n                    <button className=\"btn btn-success\" onClick={handleSubmit}> SAVE </button>\r\n                    {/* )} */}\r\n\r\n                </div>\r\n            </div>  \r\n        </div>\r\n        </>\r\n    )\r\n};","/Users/gyurmeydorj/Habituall/client/src/pages/Feed.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/pages/Profile.js",["142","143","144","145"],[],"import React, { useEffect, useState } from \"react\";\nimport \"../index.css\"; \nimport { useAuth } from \"../context/AuthContext\";\nimport { useSharedContext } from \"../context/SharedContext\";\nimport { backendAPI } from \"../clientDotEnv\";\nimport { Link } from \"react-router-dom\";\n\nconst milliSecsToDays = 1000*60*60*24;\n// console.log(JSON.stringify(userHabitsStats))\nexport default function Profile (props) {\n    const {navLinks, setNavLinks} = useSharedContext();\n    const [habitInfo, setHabitInfo] = useState(null);\n    useEffect(() => {\n        fetch(backendAPI+\"/api/user/selfProfile\", {credentials: \"include\"}).then(a => a.json()).then(d => {\n            console.log(\"jkl\", d);\n            setHabitInfo(d);\n        });\n    }, [navLinks]);\n    const [currUser, setCurrUser] = useState(null)\n\n    // const currUser = {\n    //     imgSrc: 'https://images.unsplash.com/photo-1615497001839-b0a0eac3274c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8Y3V0ZSUyMGNhdHxlbnwwfHwwfHw%3D&w=1000&q=80',\n    //     ...auth.user\n    // }\n    useEffect(() => {\n        (async() => {\n            const user = await fetch(backendAPI+\"/api/login\", {credentials:\"include\"});\n            setCurrUser({\n                imgSrc: 'https://images.unsplash.com/photo-1615497001839-b0a0eac3274c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8Y3V0ZSUyMGNhdHxlbnwwfHwwfHw%3D&w=1000&q=80',\n                ...(await user.json())\n            })\n        })();\n    }, []);\n\n\n    const date = (a=new Date()) => new Date(a);\n    console.log(currUser)\n    return ( habitInfo && \n        <>\n        {/* <NavBar /> */}\n        <div id=\"main\">\n            <div className=\"container text-start\">\n            <>\n                <div id=\"about-box\">\n                    <img src={currUser.imgSrc} width=\"200\" height=\"200\"/>\n                    <h1><strong>Name: </strong>{currUser.name}</h1>\n                    <h1><strong>Motto:</strong> {currUser.motto}</h1>\n                    <h1><strong>Followers:</strong> {currUser.followers?.map(x => x!=='' && <Link to={\"/users/\"+x}>@{x}, </Link>)}</h1>\n                    <h1><strong>Follows:</strong> {currUser.following?.map(x => x!=='' && <Link to={\"/users/\"+x}>@{x} </Link>)}</h1>\n\n                </div>\n                <br />\n                <h3><b>Current stats</b></h3>\n                <div id=\"allHabits\">\n                    <ul id=\"allList\">\n                        { habitInfo && navLinks.map(x => {\n                            // if(habitInfo.find(y=>y.makeHabit == x.makeHabit)){\n                            const habit = habitInfo.find(y=>y.makeHabit == x.makeHabit);\n                            let remDays, progress;\n                            console.log(habitInfo, \"habit\", x.makeHabit);\n\n                            let totalDayDiff = (date(habit.dueDate) - date(habit.createDate)) / milliSecsToDays;\n                            let currDayCovered = (date() - date(habit.createDate)) / milliSecsToDays;\n                            currDayCovered = Math.floor(currDayCovered);\n                            let daysDone = habit.daysDone;//habit.notes.filter(y => y.done === true) ? habit.notes.filter(y => y.done === true).length : 0;\n\n                            console.log(\"log,\", totalDayDiff, currDayCovered, daysDone, habit.makeHabit)\n                            remDays = totalDayDiff - currDayCovered;\n                            progress = Math.floor((daysDone / totalDayDiff) *100);    \n                            if(!progress) progress = 0;\n                            return (\n                            <li key={x.habitId} className={remDays < 0 ? \"text-decoration-line-through\": \"\"}>\n                                <div id=\"mkHb\"> {x.makeHabit}</div>\n                                <span id=\"progress\">Progress: <b>{ progress }% {progress > 30 ? progress > 80? '👏':'🏃':'⚠️'} </b>\n                                <div className=\"progressBar\" style={{\n                                    background: `linear-gradient(to right, ${progress > 30 ? progress > 80? 'green':'yellow':'red'} 50%, transparent 50%)`\n                                }}></div>\n                                </span>\n                                <span id=\"daysLeft\">Days Remaining: <b>{remDays <0 ? `finished` : `${remDays} days`}</b></span>\n                            </li>\n                            );\n                    // }\n                })\n                    }\n                    </ul>\n                </div>\n            </>\n            </div>\n        </div>\n        </>\n    );\n  }\n  ","/Users/gyurmeydorj/Habituall/client/src/pages/AboutUsPage.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/pages/LoginPage.js",["146","147","148","149","150","151"],[],"import { useAuth } from '../context/AuthContext.js';\r\n// import auth from '../services/auth.js';\r\nimport {useEffect, useState} from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n// let error = false;\r\nimport \"../Login.css\";\r\n\r\n\r\n\r\nexport default function LoginPage(props){\r\n  const [error, setError] = useState(false);\r\n  const loggedOut = false;\r\n  // const [motto, setMotto] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   if(!register){\r\n  //     return <RegisterComp />;\r\n  //   }\r\n  // }, [register])\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const auth = useAuth();\r\n  \r\n\r\n  const from = location.state?.from?.pathname || \"/\";\r\n  if(auth.isAuthenticated) navigate(from)\r\n  async function handleSubmit(e){\r\n    e.preventDefault();\r\n    const [username, password] = [document.querySelector('#username').value, document.querySelector('#password').value];\r\n    // const [username, password] = [\"dorjee\",\"hi\"]\r\n    // username = 'dorjee';\r\n    // password ='hi';\r\n    try{\r\n        await auth.authenticate(username, password);\r\n        navigate(from);\r\n    }catch(err) {\r\n        // this.setState({ failed: true });\r\n        setError(true);\r\n      };\r\n    \r\n  }\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    const [username, password, name, motto] = [document.querySelector('#r_username').value ,document.querySelector('#r_password').value, document.querySelector('#r_name').value, document.querySelector('#r_motto').value];\r\n    if(username.trim() == '' || password.trim() == '' || name.trim() == '' || motto.trim() == '')\r\n      {\r\n        alert('fill all the boxes');\r\n        return;\r\n      }\r\n    try{\r\n        await auth.register(username, password, name, motto);\r\n        navigate(from);\r\n    }catch(err) {\r\n        // this.setState({ failed: true });\r\n        setError(true);\r\n      };\r\n  };\r\n\r\n  function ErrorAlert(props){\r\n    return (\r\n      <div class='alert alert-danger' style={{background: ''}}>{props.details}</div>\r\n    )\r\n    }\r\n\r\n  const S_LoginComp = props => {\r\n\r\n    return (\r\n<>\r\n{error && <ErrorAlert details={\"Login failed\"} />}\r\n{loggedOut && <ErrorAlert details={\"Log in to view page\"} />}    \r\n\r\n<div className='login-area'>\r\n  <div className='banner'>Habituall 🌙 ☀️</div>\r\n\t<div class=\"main\">  \t\r\n  <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\" />\r\n    <div class=\"signup\">\r\n      <form onSubmit={handleSubmit}>\r\n      <label for=\"chk\" aria-hidden=\"true\">Login</label>\r\n        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" required=\"\" />\r\n        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" required=\"\" />\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"login\">\r\n      \r\n      <form onSubmit={registerUser}>\r\n        <label for=\"chk\" aria-hidden=\"true\">Sign up</label>\r\n        <input type=\"text\" id=\"r_name\" name=\"name\" placeholder=\"Name\" required=\"\" />\r\n        <input type=\"text\" id=\"r_username\" name=\"username\" placeholder=\"Username\" required=\"\" />\r\n        <input type=\"motto\" id=\"r_motto\" name='motto' placeholder=\"About your profile\" />\r\n        <input type=\"password\" id=\"r_password\" name='password' placeholder=\"Enter your password\" required=\"\" />\r\n        <button>Sign up</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n</>\r\n)\r\n  }\r\n\r\n  \r\n\r\n  return <S_LoginComp />\r\n};","/Users/gyurmeydorj/Habituall/client/src/pages/ShowHabitPage.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\"\r\nimport { useSharedContext } from \"../context/SharedContext\";\r\nimport habitService from \"../services/habitService\";\r\nimport TrashIcon from \"../components/icons/TrashIcon\";\r\nimport CommentElem from \"../components/CommentElem\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { CalendarComp } from \"../components/CalendarComp\";\r\n\r\n\r\nconst DEFAULT_HABIT_ID = 100;\r\nlet currDate = new Date();\r\ncurrDate = currDate.toDateString();\r\nconst randomString = length => Array.from({length}, () => Math.random().toString(36).charAt(2)).join('');\r\n\r\nconst Tick = (props) => {\r\n  return (\r\n  <div className=\"habitDone mb-1 w-[40px]\">\r\n    <div className={\"flex h-[40px] items-center justify-center rounded-full bg-lime-500\" + \" \" + (props.done ? \"note_status\" : \"\")}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"\">\r\n        <path d=\"M 20.292969 5.2929688 L 9 16.585938 L 4.7070312 12.292969 L 3.2929688 13.707031 L 9 19.414062 L 21.707031 6.7070312 L 20.292969 5.2929688 z\"></path>\r\n      </svg>\r\n    </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\nconst calendarStyleAppend = (note) => {\r\n    \r\n    const convertToCalendarDate = (dateStr) => {\r\n      const date = new Date(dateStr);\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return date.toLocaleDateString('en-US', options);\r\n    }\r\n\r\n    const calendarStyle = `[aria-label=\"${convertToCalendarDate(note.date)}\"] { \r\n      color: ${note.done ? 'green' : 'red'};\r\n      border: 3px solid ${note.done ? 'green' : 'red'};\r\n    }`;\r\n    return calendarStyle;\r\n};\r\n\r\nconst HabitNote = props => {\r\n  const {note, owner, experimental, submitNote} = props;\r\n  const [customDate, setCustomDate] = props.customDate || [null, null];\r\n  let noteDate = note.date;\r\n  return (\r\n    new Date().toDateString() !== noteDate ?\r\n    <>\r\n      <div className=\"habitNote_text text-md flex h-[45px] w-full resize-none items-end justify-start border-b-2 border-b-gray-200 focus:outline-none\">\r\n        {note.note}\r\n      </div>  \r\n    </>\r\n    :\r\n    <>\r\n      <textarea id=\"textarea\" placeholder=\"any note for today?\" className=\"habitNote text-md flex h-[45px] w-full resize-none items-end justify-start border-dashed border-b-2 border-b-black focus:outline-none\" defaultValue={note.note} ></textarea>\r\n      {experimental && <input type=\"date\" value={customDate} onChange={e => setCustomDate(e.target.value)} />}\r\n      <button onClick={submitNote} className=\"btn btn-primary mt-2 flex\">SAVE</button>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\n function ShowHabitPage(props){\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [currNote, setCurrNote] = useState('')\r\n  const {navLinks, setNavLinks} = useSharedContext();\r\n  let newNote = {\r\n    \"date\": (new Date()).toDateString(),\r\n    \"note\":\"\",\r\n    \"done\": undefined\r\n  };\r\n  const [noteObj, setNoteObj] = useState(newNote);\r\n  const [calendarStyle, setCalendarStyle] = useState(``);\r\n  \r\n  const [notes, setNotes] = useState([]);\r\n  const [reloadNotes, setReloadNotes] = useState(false);\r\n  const [todayNoteExist, setTodayNoteExist] = useState(false);\r\n\r\n  const [currHabit, setCurrHabit] = useState({makeHabit:'1'});\r\n  \r\n  \r\n  const [customDate, setCustomDate] = useState(\"\");\r\n\r\n  const [calendarVal, calendarChange] = useState(new Date());\r\n\r\n\r\n  useEffect(() => {\r\n    const date = calendarVal.toDateString();\r\n    let dateIsLogged = false;\r\n    notes.forEach(x => {\r\n      if(x.date === date) dateIsLogged = true;\r\n    });\r\n    if(!dateIsLogged) return;\r\n    document.location.href = ('#'+date);\r\n    return () => {};\r\n  }, [calendarVal]);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(navLinks, \"navlink 1\")\r\n    let currhb = navLinks.find(x => x.makeHabit == params.id)?navLinks.find(x => x.makeHabit == params.id): [] ;\r\n    setCurrHabit(currhb);\r\n    console.log(\"params.id changed\", params.id, currHabit)\r\n  }, [navLinks, params.id]);\r\n  \r\n  useEffect(() => {  //loadNote upon navbar habit being clicked\r\n    const fetchNotes = async() => {\r\n      const notes = await habitService.loadNotes(currHabit.makeHabit);\r\n      // console.log(notes, \"notes fethced 2\")\r\n      const notes2 = await notes.json();\r\n      console.log(\"notes fetched 2\", notes2)\r\n      if(notes2[0]){\r\n        setNotes(notes2[0].notes);\r\n        setTodaysNote(notes2[0].notes); //not a state\r\n      }\r\n    };\r\n    fetchNotes();\r\n\r\n    console.log(currHabit, \"currHabit makeHabit changed\", notes);\r\n    const setTodaysNote = (notes) => {\r\n      let todaysNoteUndefined = notes?.find(x => (new Date(x.date)).toDateString() === currDate) === undefined;\r\n      if(todaysNoteUndefined){\r\n        setNoteObj(newNote);\r\n        setNotes(notes => [...notes, newNote])\r\n        return;\r\n      }\r\n      console.log(\"notes exists, setting todays note\", notes, todaysNoteUndefined)\r\n\r\n      setTodayNoteExist(true);\r\n      //else set the found note as todays note\r\n      setNoteObj( //find if todays note if exist, else create new empty note el\r\n        notes.find(x => (new Date(x.date)).toDateString() === currDate)\r\n      );\r\n    };\r\n\r\n    return () => {\r\n      setReloadNotes(false)\r\n    }\r\n  }, [currHabit.makeHabit, reloadNotes]);\r\n\r\n  \r\nlet c = 0;\r\n\r\n// useEffect(() => {\r\n//   console.log(noteObj, \"new habit uf\", c++)\r\n// }, [noteObj.note, noteObj.tick]);\r\n\r\nconst [saveStatus, setSaveStatus] = useState(false);\r\nconst logDay = (state, habitDate) => {\r\n  if(habitDate !== currDate) return\r\n  let markedDone = state === \"tick\"; \r\n  saveNote();\r\n \r\n  // if(props.id == \"today\") habit = noteObj; \r\n\r\n  const saveStatus = () => {\r\n    if(noteObj.done === undefined || noteObj.done && !markedDone || !noteObj.done && markedDone){\r\n      setNoteObj(noteObj => ({ ...noteObj, \"done\": markedDone}));\r\n    }else if(noteObj.done !== undefined && (noteObj.done && markedDone) || (!noteObj.done && state !== \"tick\")){\r\n      setNoteObj(noteObj => ({...noteObj, \"done\" : undefined}))\r\n    }\r\n  }\r\n  saveStatus();\r\n};\r\n\r\nconst updateNoteDB = async () => {\r\n\r\n  //this is the client side logic\r\n  // const currNoteInx = currHabit.notes.findIndex(x => x.date === noteObj.date);\r\n  // const newHabit = currHabit;\r\n  // if(currNoteInx == -1){\r\n  //   newHabit.notes.push(noteObj);\r\n  // }else{\r\n  //   newHabit.notes[currNoteInx] = noteObj;\r\n  // }\r\n  // console.log(\"new Habit will be\", currHabit.notes[currNoteInx], newHabit);\r\n  // console.log(\"new habit navlink\", navLinks )  \r\n  // habitService.updateHabit(currHabit.habitId, newHabit); //calling server logic\r\n  console.log(\"noteObj updating\", noteObj);\r\n  if(customDate !== \"\") noteObj.date = new Date(customDate).toDateString();\r\n  const resp = await habitService.createNote(noteObj, currHabit.makeHabit)\r\n  if(resp.ok){\r\n    setReloadNotes(true)\r\n    return;\r\n  }\r\n  console.error(resp, \"note not created\")\r\n}\r\n\r\n\r\nconst saveNote = () => {\r\n  setNoteObj(noteObj => ({...noteObj, \"note\": document.querySelector('#textarea').value}));\r\n  console.log(\"new Habit saveNOte\", noteObj);\r\n}\r\nconst submitNote = () => {\r\n  saveNote();\r\n  setSaveStatus(true);\r\n}\r\n\r\nuseEffect(() => {\r\n  if(saveStatus){\r\n    updateNoteDB();\r\n  }\r\n  return () => {\r\n    setSaveStatus(false);\r\n    console.log(\"cleanup called\", saveStatus)\r\n  }\r\n}, [saveStatus]);\r\n\r\nconst experimental = false;  \r\n\r\nconst deleteNote = async (makeHabit, noteId) => {\r\n\r\n  const resp = await habitService.deleteNote(makeHabit, noteId);\r\n  if(resp.ok /*&& resp.json().modifiedCount == */){\r\n    console.log(\"note deleted\", noteId);\r\n    // setNotes(notes => ...notes);\r\n    setReloadNotes(true);\r\n\r\n  }\r\n}\r\n\r\n\r\nconst HabitElem = props => {\r\n\r\n  let habit = props.habit;\r\n  // const {className} = props;\r\n  const todaysNote = props.id == \"today\";\r\n  let today = false;\r\n  if(todaysNote){\r\n    habit = noteObj;\r\n    today=true;\r\n  }\r\n\r\n  console.log(habit, \"habitelem habit\", currHabit.makeHabit)\r\n\r\n  return (\r\n    <>\r\n  <div id={habit.date} className={props.className + ` ${today ? 'text-white':''} ` +\" m-4 mt-8 flex h-auto flex-row rounded-md border-2 p-2 \"+(habit.done ? \"habitDone\" : \"habitMissed\")}>\r\n    <div className=\"w-5/6\">\r\n        <div className=\"habitDate border-l-black border-4  font-bold flex h-[45px] items-center justify-center border-transparent text-center align-middle\">\r\n          {habit.date}\r\n        </div>\r\n        <HabitNote submitNote={submitNote} customDate={[customDate, setCustomDate]} experimental={experimental} note={habit}/>\r\n    </div>\r\n\r\n  {/*stands to the side*/}\r\n    <div className=\"flex w-1/6 flex-col items-center justify-center border-0 border-black\">\r\n      {(!todaysNote && <TrashIcon onClick={() => deleteNote(currHabit.makeHabit, habit.noteId)} />)} \r\n      <div className=\"habitDone\" id={'tick'+habit.date} onClick = {() => logDay('tick', habit.date)} >\r\n        <Tick done={habit.done} />\r\n      </div>\r\n      <div id={'cross'+habit.date} onClick={() => logDay('cross', habit.date)} className={\"habitMissed right-9 top-[50px] flex h-[40px] w-[40px] items-center justify-center rounded-full bg-red-400\"+ \" \" + (habit.done == false ? \"note_status\" : \"\")}>\r\n        x\r\n      </div>\r\n      </div>\r\n      \r\n  {props.children}\r\n  </div>\r\n  </>\r\n  );\r\n};\r\n\r\nlet calstyle= '';\r\nconst daysRemaining = (Math.floor(((new Date(currHabit.dueDate)) - (new Date()))/ (1000 * 60 * 60 * 24)));\r\n\r\n  return (   \r\n  (\r\n    currHabit &&\r\n    <>\r\n    <div className = \"container\">\r\n    <div id=\"makeBreakBox\">\r\n        <h2> <strong className=\"text-success\"> MAKE:</strong> {currHabit.makeHabit} </h2> \r\n        <h2> <strong className=\"text-danger\"> BREAK:</strong> {currHabit.breakHabit} </h2>\r\n        <h2>{new Date(currHabit.createDate).toDateString()} - {new Date(currHabit.dueDate).toDateString()}</h2>\r\n    </div>\r\n    <div className=\"habitNotesContainer\">\r\n    \r\n    {\r\n      \r\n    notes.map(note => \r\n      {\r\n        calstyle += (calendarStyleAppend(note))\r\n        console.log(calstyle, \"calst\");\r\n      \r\n      return ((note.date !== noteObj.date) ? ((\r\n        <>\r\n          <HabitElem className={`habitNote ${calendarVal.toDateString() === note.date ? 'selected' :''}`} habit={note}> \r\n          </HabitElem>\r\n          <CommentElem key={note.noteId} noteId={note.noteId} />\r\n        </>\r\n        )\r\n      )\r\n        : ((daysRemaining > 0) && <HabitElem habit={noteObj} id=\"today\"/>)\r\n    )}\r\n    )\r\n  }\r\n  {\r\n    // /**if no notes at all */\r\n    // if(notes.length == 0 && daysRemaining > 0) ? <div>jpt</div> : <></>)\r\n    notes.length == 0 && daysRemaining > 0 && <HabitElem habit={noteObj} id=\"today\" />\r\n  }\r\n  <CalendarComp createDate={currHabit.createDate} dueDate={currHabit.dueDate} calendarStyle={calstyle} calendarState={[calendarVal, calendarChange]} />\r\n  {\r\n  (daysRemaining>0 ? <h1><strong>{daysRemaining}</strong> days left</h1>: <h1>due passed</h1>)\r\n  }        \r\n</div>\r\n</div>\r\n</>\r\n  )\r\n    \r\n    )\r\n};  \r\n\r\nexport {ShowHabitPage, HabitNote, CalendarComp, calendarStyleAppend};","/Users/gyurmeydorj/Habituall/client/src/components/NavBar.js",["184","185","186","187","188","189"],[],"import React, { useEffect, useState } from \"react\";\nimport \"../index.css\"; \nimport TrashIcon from \"./icons/TrashIcon\";\nimport { Link, json, useNavigate, useParams } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport AuthButton from \"../components/AuthButton\";\nimport { backendAPI } from \"../clientDotEnv\";\nimport { useSharedContext } from \"../context/SharedContext\";\nimport habitService from \"../services/habitService\";\n// import habitService from \"../../services/habitService\";\n\n// backendAPI = a.backendAPI;\n// const habitDB = [\n//     [100, \"Jog everyday\", \"Daily junk food\"],\n//     [101, \"50 pushups daily\", \"idling away time\"],\n//     [102, \"3 miles running\", \"improve cardio endurance\"]\n//     ];\n\nlet auth;\nlet host = backendAPI;\n\nconst ExpandMenuBtn = (props) => {\n    return (\n        <div id=\"hamburger-expand-btn\" onClick={() => openNav()} className=\"position-absolute start-0\">\n            <svg width=\"60px\" height=\"60px\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#000\" d=\"M32 96v64h448V96H32zm0 128v64h448v-64H32zm0 128v64h448v-64H32z\" /></svg>\n        </div>\n    );\n};\n\nfunction openNav() { document.getElementById(\"mySidenav\").style.width = \"300px\"; document.getElementById(\"main\").style.marginLeft = \"300px\"; }\nfunction closeNav() { document.getElementById(\"main\").style.marginLeft = \"0\"; document.getElementById(\"mySidenav\").style.width = \"0\"; if(document.querySelector(\"#new-in-val\") != undefined){     document.querySelector(\"#new-in-val\").remove(); } }\n\nconst NavBarInside = (props) => {\n    // const [navOpened, setNavOpened] = useState(false);\n    const navigate = useNavigate();\n    const [navError, setNavError] = useState(false);\n    // const [navLinks, setNavLinks] = useState([]);\n    const {navLinks, setNavLinks} = useSharedContext();\n    // const {currHabit, setCurrHabit} = useSharedContext();\n    const [currHabit, setCurrHabit] = useState({});\n    \n\n     window.onkeydown = (e) => {\n        if(e.key === \"Enter\" && document.querySelector('#new-in-val') !== null){\n            console.log('creating /create/' + document.querySelector(\"#new-in-val\").value);\n            navigate('/create/' + document.querySelector(\"#new-in-val\").value);\n            document.querySelector('#new-in-val').remove();\n        }   \n      }\n      const makeHabit = parseInt(document.location.href.split(\"/habits/\")[1] || 100) // !== undefined ? document.location.href.split(\"/habits/\")[1] : '100');\n\n\n    //move to shared context\n    //   useEffect(() => {\n    //     let habits = [];\n    //     fetch(host+'/api/habits', {credentials: \"include\"})\n    //         .then(a => {\n\n    //             if(!a.ok){\n    //                 setNavError(true); \n    //                 return\n    //             }\n    //             return a.json();\n    //         })\n    //         .then(jsonObj => {\n    //             /**\n    //              * response looks like this:\n    //              * {\n    //              * message: \"docs fetched\",\n    //              * _id: \"\",\n    //              * habits: {habits: [{..}, {..}], userId: \"\" }\n    //              * }\n    //              */\n    //             habits = [...jsonObj.habits.habits];\n    //             setNavLinks(habits);\n    //             console.log(navLinks, \"userDB2\");\n    //         })\n    //         .catch(e => {\n    //             throw new Error(e);\n    //         });\n    //         console.log(habits,\"habits..\")\n    // }, []); //commented\n\n    //   useEffect(() => {\n    //     setCurrHabit(navLinks.find(x => x.makeHabit === makeHabit) ? navLinks.find(x => x.makeHabit === makeHabit) : []);\n    //     console.log(\"uf\", navLinks)\n    // }, [navLinks]);\n    \nconsole.log(navLinks, \"navLinks after useEffect()\")\n  useEffect(() => {\n    setCurrHabit(navLinks.find(x => x.makeHabit === makeHabit) ? navLinks.find(x => x.makeHabit === makeHabit) : ['null']);\n    console.log(\"sc\", currHabit, navLinks)\n  }, [navLinks]);\n\n//   useEffect(() => {\n//     // setCurrHabit()\n//     setCurrHabit(currHabit)\n//   },[navLinks]);\n//   console.log(\"useParams\", useParams())\n\n    // console.log(\"navlink1\",(navLinks),\"currHabit\", currHabit);\n\n    const [newHabitInput, setNewHabitInput] = useState(false);\n\n    const ProfileLink = (props) => {\n        return (\n            // {{console.log(document.location.pathname)}\n        <div className={'navList ' + props.active} onClick={() => setCurrHabit(0)}>\n            <Link to='/profile' >Profile</Link>\n        </div>\n        );\n    }\n\n    useEffect(() => {\n        openNav();\n    }, []);\n\n\n    useEffect(() => {\n        console.log(\"cf\", currHabit);\n    }, [currHabit])\n    // const userDB = {};\n\n    // const habitDB = [];\n    // userDB.habits.forEach(x => {\n    //         habitDB.push([x.makeHabit,\n    //                     x.makeHabit,\n    //                     x.breakHabit]);\n    //     });\n \n    function addNewTask(){\n        if(document.querySelector('#new-in-val') !== null)\n            document.querySelector('#new-in-val').focus();\n        else if(!newHabitInput){\n            let ina = document.createElement(\"input\");\n            ina.id = \"new-in-val\";\n            ina.placeholder = \"new name here\";\n            document.querySelector(\"#navHabitList\").insertBefore(ina, document.querySelector(\"#navHabitList\").children[document.querySelector(\"#navHabitList\").childElementCount - 1]);\n            ina.focus();\n            setNewHabitInput(true);\n        }\n        setNewHabitInput(false)\n    }\n    const deleteHabit = (makeHabit) => {\n        console.log(\"deleteHabit\", \" here\")\n        const newNavLinks = [...navLinks];\n        newNavLinks.splice(newNavLinks.findIndex(x => x.makeHabit === makeHabit), 1);\n        \n        const makeDeleteRequest = async () => {\n            const resp = await habitService.deleteHabit(makeHabit); // update the array without the current one\n            \n            if(!resp.ok) return;\n            if(resp.ok){\n            console.log(\"resp.ok\", newNavLinks)\n            setNavLinks(newNavLinks);\n            }\n        }\n        makeDeleteRequest();\n    }\n    const FeedLink = props => {\n        return (\n            <div className={\"navList \" + ((document.location.pathname === '/' ? \"active currHabit\" : '')) }>\n                <Link key=\"feed\" to=\"/\">Feed</Link>\n            </div> \n        );\n    }\n    return (\n        !navError ? \n        <>\n        <div id=\"mySidenav\" className=\"sidenav\">\n            <button className=\"addBtn\" onClick={() => addNewTask()}>+</button>\n            <button className=\"closebtn\" onClick={() => closeNav()}>&times;</button>\n            <div id=\"navHabitList\">\n            <FeedLink />\n                {\n                    navLinks.map(h => (h[0] !== 'null' && (\n                        //if not current habit then class=inactive else class=\"active currHabit\"\n                        // console.log(h[0]) ||\n                        // (<script>{console.log(currHabit.makeHabit ,\"hbi\")}</script>)+\n                        <div id={h.makeHabit} className={\"navList \" + ((decodeURIComponent(document.location.pathname).includes(h.makeHabit) ? \"active currHabit\" : '')) }>\n                            <Link key={h.makeHabit} to={\"/habits/\"+h.makeHabit} onClick={() => setCurrHabit(h)}>\n                                {h.makeHabit}\n                            </Link> {/*if 22 is set to 0 then the a[href] for profile will be /profile */}\n                            <TrashIcon onClick={() => deleteHabit(h.makeHabit)} key={h.makeHabit+\"-del\"} />\n                        </div>\n                        )\n                    ))\n                }\n                <ProfileLink active={document.location.pathname === \"/profile\" ? 'active currHabit' : ''} />\n                <AuthButton />\n            </div>\n        </div>\n        <ExpandMenuBtn />\n        </>\n        :\n        <div className=\"text-red\">Error: Couldnt load list</div>\n        );\n  };\n  const NavBar = (props) => {\n\n    auth = useAuth();\n    if(!auth.isAuthenticated){\n        return <></>\n    }\n\n    // console.log(\"authenticated in navbar\", auth.isAuthenticated, (new Date()).getMilliseconds());\n    return  (<NavBarInside />)\n}\n// openNav();\n  export {NavBar, ExpandMenuBtn};","/Users/gyurmeydorj/Habituall/client/src/components/PrivateRoute.js",["190"],[],"import { useAuth } from \"../context/AuthContext\";\r\nimport { useLocation, Navigate } from \"react-router-dom\";\r\nimport { SharedProvider } from \"../context/SharedContext\";\r\n\r\nfunction PrivateRoute({ children }) {\r\n  let auth = useAuth();\r\n  let location = useLocation();\r\n  // const {currHabitProvided} = useSharedContext();\r\n  // const {currHabit, setCurrHabit} = currHabitProvided;\r\n  // const {currHabit, setCurrHabit} = useSharedContext();\r\n\r\n  if (!auth.isAuthenticated) {\r\n    // console.log(\"auth not authenticate in Private Route\", auth.isAuthenticated, (new Date()).getMilliseconds());\r\n    // Redirect them to the /login page, but save the current location they were\r\n    // trying to go to when they were redirected. This allows us to send them\r\n    // along to that page after they login, which is a nicer user experience\r\n    // than dropping them off on the home page.\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n  \r\n//wrap this with Context sharing currHabit\r\n// let comp = \r\n  // <SharedProvider>\r\n    // children\r\n  // </SharedProvider>\r\n  // ;\r\n  // console.log(\"wrapped in SharedProvider\")\r\n  return children;\r\n}\r\n\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => (\r\n//   <Route {...rest} render={(props) => (\r\n//     auth.isAuthenticated === true\r\n//       ? <Component {...props} />\r\n//       : \r\n//       // document.location = document.location.origin+'/login'\r\n//       <Navigate to='/login'\r\n//       // {{ \r\n//       //     // pathname: '/login',\r\n//       //     // state: { from: props.location }  \r\n//       //   }} \r\n//       />\r\n//   )} />\r\n// );\r\n\r\nexport default PrivateRoute;\r\n// export default PrivateWrapper;","/Users/gyurmeydorj/Habituall/client/src/components/UserProfile.js",["191","192"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport habitService from \"../services/habitService\";\nimport styledComponents from \"./styleComponents\";\nimport { useAuth } from \"../context/AuthContext\";\n\nconst UserProfile = props => {\n    const [user, setUser] = useState(null);\n    const [userHabits, setUserHabits] = useState(null);\n    const [error, setError] = useState('')\n    const [followStatus, setFollowStatus] = useState(null);\n    // const [habits, setHabits] = useState(null);\n    const params = useParams();\n    const auth = useAuth();\n    const meUser = auth.user;\n    // console.log(\"name,\", myName)\n    const username = params.username;\n    const userphoto = 'https://media.istockphoto.com/id/1337144146/vector/default-avatar-profile-icon-vector.jpg?s=612x612&w=0&k=20&c=BIbFwuv7FxTWvh5S3vB6bkT0Qv8Vn8N5Ffseq84ClGI=';\n\n    // setError(\"nope\")\n    // console.log(error, \"diverror\");\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const resp = await habitService.getProfileInfo(username);\n            if(!resp.ok){\n                setError(\"nothing found\");\n                setUser(null)\n                return;\n            }\n            const profileInfo = await resp.json();\n            setUser(profileInfo.userInfo);\n            console.log(\"tag,\", profileInfo.userInfo.followers, meUser.username)\n            setFollowStatus(profileInfo.userInfo.followers.includes(meUser.username))\n            // setInterval(() => console.log(user, \"user::\"));\n            setUserHabits(profileInfo.habits[0].habits);\n            console.log(\"userhabits\", profileInfo.habits[0].habits)\n        };\n        fetchUser();\n    }, [params.username]);\n\n    // useEffect(() => {\n    //   const getFollowStatus = async() => {\n\n    //   }\n    // }, [followStatus])\n\n    const toggleFollow = () => {\n      const toggleFollowReq = async() => {\n        const resp = await habitService.toggleFollow(user.username, followStatus);\n        console.log(\"toggleFollow resp\", await resp.json());\n        if(resp){\n          setFollowStatus(!followStatus);\n        }\n      } \n      toggleFollowReq();\n    }\n    \n    const UserHabitCard = props => {\n      return (\n    <div className=\"card border-light mb-3\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n      <div className=\"card-header\" style={styledComponents.cardHeaderStyle}>\n        <h4 className=\"mb-0\">Habits</h4>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        {userHabits?.map((h, index) => (\n          <li key={index} className=\"list-group-item\" style={styledComponents.listGroupItemStyle}>\n            <Link to={`/users/${user.username}/habits/${h.makeHabit}`} className=\"text-decoration-none\" style={styledComponents.linkStyle}>\n              {h.makeHabit}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n      );\n    };\n\n    const FollowButton = props => {\n      const btn =  (\n        <>\n          <div id=\"followBtn\">\n              <button type=\"submit\" className=\"border border-black bg-primary p-2 text-white rounded\" onClick={() => toggleFollow()}>\n                {followStatus === true ? 'Unfollow' : 'Follow'}\n              </button>\n            </div>\n        </>\n      );\n\n      return btn;\n    }\n\n    return (\n        user != null ?  \n        <>\n    <div className=\"searchProfile container my-5\">\n      {/* User Profile Card */}\n      <div className=\"card border-light mb-3\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n        <div className=\"card-header\" style={styledComponents.cardHeaderStyle}>\n          <h4 className=\"mb-0\">User Profile</h4>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row mb-3\">\n            <div className=\"col-auto\">\n              <img src={userphoto} alt=\"User Photo\" className=\"img-fluid rounded-circle border border-dark\" style={{ width: '100px', height: '100px' }} />\n            </div>\n            <div className=\"col\">\n              <h5 className=\"card-title\" style={styledComponents.cardBodyTitleStyle}>{user.name}</h5>\n              <p className=\"card-text\" style={styledComponents.cardTextStyle}>Username: {user.username}</p>\n              <p className=\"card-text\" style={styledComponents.cardTextStyle}>Motto: {user.motto}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n     <UserHabitCard />\n     <FollowButton />\n    </div>\n    </>\n    :\n    <>\n        <div className=\"error text-danger\">{error}</div>\n    </>\n    );\n}\n\n\nexport default UserProfile;","/Users/gyurmeydorj/Habituall/client/src/components/Search.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/components/ShowHabitsForeign.js",["193","194","195","196","197","198","199","200"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport habitService from \"../services/habitService\";\nimport CommentElem from \"./CommentElem\";\nimport { CalendarComp, HabitNote, calendarStyleAppend } from \"../pages/ShowHabitPage\";\n\nconst DEFAULT_HABIT_ID = 100;\nlet currDate = new Date().toDateString();\n\nconst Tick = (props) => {\n  return (\n  <div className=\"habitDone mb-1 w-[40px]\">\n    <div className={\"flex h-[40px] items-center justify-center rounded-full bg-lime-500\" + \" \" + (props.done ? \"border-4 border-black\" : \"\")}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"\">\n        <path d=\"M 20.292969 5.2929688 L 9 16.585938 L 4.7070312 12.292969 L 3.2929688 13.707031 L 9 19.414062 L 21.707031 6.7070312 L 20.292969 5.2929688 z\"></path>\n      </svg>\n    </div>\n    </div>\n    );\n  };\n\nconst ShowHabitsForeign = props => {\n  const params = useParams();\n//   const [currHabit, setCurrHabit] = useState({ makeHabit: '1' });\n  const [notes, setNotes] = useState([]);\n  const [error, setError] = useState(false);\n  const [makeHabit, setMakeHabit] = useState('');\n  const [dates, setDates] = useState(null);\n  \n  const [calendarVal, calendarChange] = useState(new Date());\n  useEffect(() => {\n    const date = calendarVal.toDateString();\n    let dateIsLogged = false;\n    notes.forEach(x => {\n      if(x.date === date) dateIsLogged = true;\n    });\n    if(!dateIsLogged) return;\n    document.location.href = ('#'+date);\n    return () => {};\n  }, [calendarVal]);\n\n  const convertToCalendarDate = (dateStr) => {\n    const date = new Date(dateStr);\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n  };\n  let calendarStyle = ``;\n  \n\n\n  useEffect(() => {\n    const fetchHabit = async () => {\n    //   const habit = await habitService.loadHabit(params.id);\n    //   setCurrHabit(habit);\n    };\n\n    const fetchNotes = async () => {\n      const resp = await habitService.getForeignNotes(params.username, params.makeHabit);\n      if(!resp.ok) setError(true);\n      const notes = await resp.json();\n      console.log(\"notes foreign\", notes);\n      notes[0].notes = notes[0].notes.filter(x => x.date !== currDate);\n      console.log(notes[0].notes[2], \"filtered filter\")\n\n      setNotes(notes[0].notes); \n      setMakeHabit(notes[0].makeHabit);\n      setDates({createDate: notes[0].createDate, dueDate: notes[0].dueDate});\n    };\n\n    fetchNotes();\n  }, [params.makeHabit, params.username]);\n\n  // const HabitNote = (props) => {\n  //   const {note, owner} = props;\n\n  //   return (\n  //   <div className=\"habitNote text-md flex h-[45px] w-full resize-none items-end justify-start border-b-2 border-b-gray-200\">\n  //     {note.note}\n  //   </div>\n  //   );\n  // };\n  \n  const HabitElem = props => {\n\n    const {habit} = props;\n\n    return (\n    <div id={habit.noteId} className={props.className +\" m-4 mt-8 flex h-auto flex-row rounded-md border-2 p-2 \"+(habit.done?\"habitDone\":\"habitMissed\")}>\n      <div className=\"w-5/6\">\n        <div className=\"habitDate border-l-black border-4 font-bold flex h-[45px] items-center justify-center border-transparent text-center align-middle\">\n          {habit.date}\n        </div>\n        <HabitNote note={habit} />\n      </div>\n\n      {/* side of the note */}\n      <div className=\"flex w-1/6 flex-col items-center justify-center border-0 border-black\">\n              <div className=\"habitDone\">\n                <Tick done={habit.done} />  \n              </div>\n              <div className={\"habitMissed right-9 top-[50px] flex h-[40px] w-[40px] items-center justify-center rounded-full bg-red-400\"+ \" \" + (habit.done == false ? \"border-4 border-black\" : \"\")}>x</div>\n      </div>\n    </div>\n    );\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <div id=\"makeBreakBox\">\n          <div id=\"username\" className=\"fw-bold p-10 border rounded border-dark-3\"><Link to={`/users/${params.username}`}>Habituall by @{params.username}</Link></div>\n          <h2> <strong className=\"text-success\"> MAKE:</strong> {makeHabit} </h2> \n          <h2>{dates?.createDate} - {dates?.dueDate}</h2>\n          {/* <h2><strong className=\"text-danger\">BREAK:</strong> {currHabit.breakHabit}</h2> */}\n          {/* <h2>Complete by: {new Date(currHabict.dueDate).toDateString()}</h2> */}\n        </div>\n        <div className=\"habitNotesContainer\">\n          {notes?.map(note => {\n            calendarStyle += calendarStyleAppend(note);\n            return (\n            <>\n            {/* <div className=\"theNote\"> */}\n              <HabitElem className={`habitNote ${calendarVal.toDateString() === note.date ? 'selected' :''}`} key={note.noteId} habit={note} />\n            {/* </div> */}\n              <CommentElem key={note.noteId} noteId={note.noteId}/>\n            </>\n            );\n            })\n          }\n            {/* <h1><strong>{Math.floor(((new Date(currHabit.dueDate)) - (new Date())) / (1000 * 60 * 60 * 24))}</strong> days left</h1> */}\n            <CalendarComp createDate={dates?.createDate} dueDate={dates?.dueDate} calendarStyle={calendarStyle} calendarState={[calendarVal, calendarChange]} />\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ShowHabitsForeign;\n","/Users/gyurmeydorj/Habituall/client/src/context/AuthContext.js",["201"],[],"import React, { useState, useEffect, createContext } from \"react\";\n\nconst AuthContext = createContext();\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(false);\n  const [loading, setLoading] = useState(true); // New loading state\n  let host = 'http://localhost:3001';\n  // host = 'http://192.168.1.147:3001'\n  // host = \"http://\"+require(\"os\").networkInterfaces()['en0'][1].address+\":3001\"; // comment line if not working on separate window\n\n  useEffect(() => {\n    async function checkIfUserIsLoggedIn() {\n      try { // really needed so that the Component isn't rendered before the loginCheck is completed\n        let response = await fetch(host + \"/api/login\", { credentials: \"include\" });\n\n        if (!response.ok) {\n          throw new Error(\"Unauthenticated\");\n        }\n\n        let fetchedUser = await response.json();\n        setUser(fetchedUser);\n      } catch (error) {\n        setUser(false);\n      } finally {\n        setLoading(false); // Set loading to false when the check is complete\n      }\n    }\n\n    checkIfUserIsLoggedIn();\n  }, []);\n\n  if (loading) {\n    // Render a loading state while the authentication check is in progress\n    return <div>Loading...</div>;\n  }\n\n  const authenticate = async (username, password) => {\n    let response = await fetch(host+\"/api/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n\n\n    if (!response.ok) {\n      throw new Error(\"Login Failed\");\n    }\n\n    let loggedInUser = await response.json();\n    setUser({...loggedInUser, password: null}); // prevent the password from being sent\n\n\n    return loggedInUser;\n  };\n\n  \n  const register = async (username, password, name, motto) => {\n    let response = await fetch(host+\"/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password ,name, motto }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Register Failed\");\n    }\n  };\n\n  const signout = async () => {\n    let response = await fetch(host+\"/api/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n    console.log(response)\n    if (!response.ok) {\n      throw new Error(\"Logout Failed\");\n    }\n\n    let body = await response.json();\n    setUser(false);\n\n    return body;\n  };\n\n  return (\n    <Provider\n      value={{\n        authenticate,\n        register,\n        signout,\n        isAuthenticated: user ? true : false,\n        // isAuthenticated: true,\n        user\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\n// Create our own hook for accessing the context from any functional component\nfunction useAuth() {\n  return React.useContext(AuthContext);\n}\n\nexport { useAuth, AuthProvider };","/Users/gyurmeydorj/Habituall/client/src/context/SharedContext.js",["202","203","204","205"],[],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { backendAPI } from '../clientDotEnv';\nimport { useAuth } from './AuthContext';\nimport { useLocation } from 'react-router-dom';\n\n\nconst host = backendAPI;\n// Create a context\nconst SharedContext = createContext();\n\n// Create a provider component\nconst SharedProvider = ({ children }) => {\n    let location = useLocation();\n    const [navLinks, setNavLinks] = useState([]);\n    const [fetchError, setFetchError] = useState(false);\n    let {isAuthenticated} = useAuth();\n    // const [hi, ]\n    useEffect(() => {\n        let habits = [];\n\n        fetch(host+'/api/habits', {credentials: \"include\"})\n            .then(a => {\n                if(!a.ok){\n                    // setNavError(true); \n                    setFetchError(true);\n                    console.log(\"fetchError\");\n                    // throw new Error('unable to fetch list of habits');\n                    return {error: \"habit list fetch error\"}\n                }\n                return a.json();\n            })\n            .then(jsonObj => {\n                console.log(jsonObj, \"useEffect fetch api habits called\")\n                if(jsonObj.error) return Promise.resolve();\n                // console.log(jsonObj, \"useEffect fetch api habits resolved\")\n                /**\n                 * response looks like this:\n                 * {\n                 * message: \"docs fetched\",\n                 * _id: \"\",\n                 * habits: {habits: [{..}, {..}], userId: \"\" }\n                 * }\n                 */\n\n                habits = [...jsonObj.habits[0].habits]; \n                setNavLinks(habits);              \n                \n                console.log(jsonObj.habits, \"sc\", navLinks)\n                //set \n            })\n            .catch(e => {\n                throw new Error(e);\n            });\n    }, [isAuthenticated, location.pathname.split(\"/habits/\")[1]]);\nuseEffect(() =>{\nconsole.log(\"href changed only\")\n},[location.pathname.split(\"/habits/\")[1]])\n    return (\n        // <SharedContext.Provider value={{currHabitProvided: [currHabit, setCurrHabit]}}>\n        <SharedContext.Provider value={{navLinks, setNavLinks}}>\n            {children}\n        </SharedContext.Provider>\n    );\n};\n\n// Create a custom hook to use the context\nconst useSharedContext = () => {\n    return useContext(SharedContext);\n};\n\nexport {SharedProvider, useSharedContext}","/Users/gyurmeydorj/Habituall/client/src/clientDotEnv.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/components/FeedPost.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/components/CalendarComp.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/components/AuthButton.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/components/CommentElem.js",["206","207","208","209","210","211"],[],"import { useEffect, useState, useRef } from \"react\";\nimport habitService from \"../services/habitService\";\nimport TrashIcon from \"./icons/TrashIcon\";\nimport {FaCommentAlt, FaCommentDots, FaRegCommentAlt, FaRegCommentDots} from \"react-icons/fa\";\n\nconst CommentElem = props => {\n    const noteId = props.noteId;\n\n    window.onkeydown = (e) => {\n        if((e.key === \"Enter\" && (e.ctrlKey)) || (e.key === \"Enter\" && e.metaKey)){\n        document.querySelectorAll(\".commentBox\").forEach(x => {\n            let focused = x.querySelector('textarea') == document.activeElement;\n            console.log(document.activeElement)\n            if (focused){\n                x.querySelector('button').click();\n                return;\n            }\n        })\n        // e.target.parentElement.querySelector('form').submit()\n        }\n    };\n\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [showComment, setShowComment] = useState(false);\n    const [currUserName, setCurrUserName] = useState('');\n    const [reloadComments, setReloadComments] = useState(false);\n\n    const commenterStyle = 'commenter ';\n    const commentStyle = 'comment ';\n    const deleteStyle = 'delete ';\n\n    const getNoteComments = async (noteId) => {\n        console.log(noteId);\n        const resp = await habitService.getComments(noteId);\n        if (!resp.ok) {\n            setComments([]);\n            return;\n        }\n        const coms = await resp.json();\n        setComments(coms.comment[0]?.comments);\n        setCurrUserName(coms.currUserName);\n    };\n\n    useEffect(() => {\n        getNoteComments(noteId);\n        return () => {\n            setReloadComments(false);\n        };\n    }, [reloadComments]); // Only depend on reloadComments\n\n    const submitComment = async ( commentId) => {\n        // event.preventDefault();\n\n        console.log(\"submitting comment\", newComment);\n        if(newComment.trim() === \"\") return;\n        const resp = await habitService.comment(newComment, noteId, commentId);\n        if (!resp.ok) {\n            alert(\"error while uploading comment\")\n        }\n        const commentObj = await resp.json();\n        console.log(\"submitcomment commentOBj\", commentObj);\n        if(commentObj.modifiedCount === 0){\n            alert(\"error while uploading comment\") \n        }\n        setReloadComments(true);\n        setNewComment('');\n    }\n\n    const deleteComment = async (commentId) => {\n        const resp = await habitService.deleteComment(commentId, noteId);\n        if (!resp.ok) return;\n        const delCom = await resp.json();\n        setReloadComments(true); // Correct the function call\n    }\n\n    return (\n        showComment ?\n            <>\n            <div className=\"commentIcon\" onClick={() => setShowComment(!showComment)} ><FaRegCommentDots /></div>\n            <div className=\"theComment\">\n                <div className=\"commentDiv link-primary mb-6 border\" id={noteId}>\n                    {\n                    comments?.map(c => {\n                      return (\n                        <>\n                            <div className=\"commentDivDiv\">\n                                <div className={commenterStyle}>\n                                    @ {c.name}\n                                </div>\n                                <div className=\"commentDate\">{c.date}</div>\n                                <div className={commentStyle} id={c.commentId}>\n                                    {c.comment}\n                                </div>\n                                <div className={deleteStyle}>\n                                    {c.name === currUserName && (<TrashIcon onClick={e => deleteComment(c.commentId)} />)}\n                                </div>\n                            </div>\n                        </>\n                      )\n                    })\n                    }\n                </div>\n                <form className=\"commentBox block w-full\" onSubmit={submitComment}>\n                    <textarea placeholder=\"Type a comment and Enter\" className=\"\" value={newComment} onChange={e => setNewComment(e.target.value)} />\n                    <button type=\"button\" id=\"submit-comment\" className=\"btn btn-secondary\" value=\"submit\" onClick={submitComment}>SUBMIT</button>\n                </form>\n            </div>\n            </> :\n            <div className=\"commentIcon\" onClick={() => { setShowComment(!showComment); getNoteComments(noteId) }}>\n                <FaCommentDots />\n            </div>\n    );\n};\n\nexport default CommentElem;\n","/Users/gyurmeydorj/Habituall/client/src/components/styleComponents.js",[],[],"/Users/gyurmeydorj/Habituall/client/src/services/habitService.js",["212","213"],[],"import { backendAPI } from \"../clientDotEnv\";\n\nconst host = backendAPI;\nconst habitService =  {\n    async createNewHabit(jsonObj){\n        const resp = await fetch(host+'/api/habit/add', {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: jsonObj }),\n            headers: {\n            \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async updateHabit(habitId, newHabitList){\n        console.log(\"service\", habitId, newHabitList)\n        const resp = await fetch(host+\"/api/habit/update/\"+habitId, {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({newHabit: newHabitList}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async deleteHabit(makeHabit){\n        const resp = await fetch(host+\"/api/habit/delete\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: {makeHabit}}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async loadNotes(makeHabit){\n        const resp = await fetch(host+\"/api/notes/\"+makeHabit, {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async createNote(noteObj, makeHabit){\n        if(noteObj.note == '') noteObj.note = ' '; //temp fix\n        const resp = await fetch(host+\"/api/note/create\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: noteObj, makeHabit}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async deleteNote(makeHabit, noteId){\n        const resp = await fetch(host+\"/api/note/delete\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: {makeHabit, noteId}}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async search(username){\n        const resp = await fetch(host+\"/api/users/search\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: {username}}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async getProfileInfo(username){\n        console.log(\"getting profile info\");\n        const resp = await fetch(host+\"/api/users/profile\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({username}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    },\n    async getForeignNotes(username, makeHabit){\n        const resp = await fetch(`${host}/api/users/${username}/habits/${makeHabit}`, {\n            method: \"GET\",\n            credentials: \"include\",\n            // body: JSON.stringify({content: {param}}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    } ,\n    async getComments(noteId){\n        const resp = await fetch(host+\"/api/comments/\"+noteId, {\n            method: \"GET\",\n            credentials: \"include\",\n        });\n        return resp;\n    },\n    async comment(newComment, noteId){\n        const resp = await fetch(host+\"/api/comment/new\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({comment: newComment, noteId}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    } ,\n    async deleteComment(commentId, noteId){\n        const resp = await fetch(host+\"/api/comment/delete\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({commentId, noteId}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    } ,\n    async toggleFollow(username, followStatus){\n        let followEP = (followStatus == true) ? 'unfollow' : 'follow';\n        const resp = await fetch(host+\"/api/user/\"+username+\"/\"+followEP, {\n        method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    } ,\n    async getFeed(){\n        const resp = await fetch(host+\"/api/user/feed\",{\n            method: \"GET\",\n            credentials: \"include\"\n        });\n        return resp;\n    },\n    async template(param){\n        const resp = await fetch(host+\"/api/habit/\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: JSON.stringify({content: {param}}),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return resp;\n    } \n}\n\nexport default habitService;","/Users/gyurmeydorj/Habituall/client/src/components/icons/TrashIcon.js",["214","215"],[],"import {useEffect} from \"react\";\nimport { useSharedContext } from \"../../context/SharedContext\";\n\nconst TrashIcon = (props) => {\n  // const {makeHabit} = props;\n  // console.log(props ,\"trash\");\n  // useEffect(() => {\n  //   console.log(navLinks, \"trash nav\")\n  // }, [navLinks]);\n  const {onClick} = props;\n  return (\n      <svg\n        className=\"del-btn\"\n        width=\"24px\"\n        height=\"24px\"\n        viewBox=\"0 0 24 24\"\n        // id={\"del-\"+makeHabit}\n        onClick = {onClick} //had to pass this as prop \n        xmlns=\"http://www.w3.org/2000/svg\"\n        // onClick={() => console.log(\"shit\")}\n      >\n        <defs>\n          <style>{\"\\n      .cls-1{fill:#41416e;}\\n    \"}</style>\n        </defs>\n        <title>{\"trash\"}</title>\n        <g id=\"trash-Regular\">\n          <path\n            id=\"trash-Regular-2\"\n            data-name=\"trash-Regular\"\n            className=\"cls-1\"\n            d=\"M21,5.25H17.441A1.251,1.251,0,0,1,16.255,4.4l-.316-.95a1.746,1.746,0,0,0-1.66-1.2H9.721a1.745,1.745,0,0,0-1.66,1.2l-.316.948a1.251,1.251,0,0,1-1.186.855H3a.75.75,0,0,0,0,1.5H4.3l.767,11.5a3.76,3.76,0,0,0,3.742,3.5h6.386a3.76,3.76,0,0,0,3.742-3.5L19.7,6.75H21a.75.75,0,0,0,0-1.5ZM9.483,3.921a.252.252,0,0,1,.238-.171h4.558a.252.252,0,0,1,.238.17l.316.95a2.777,2.777,0,0,0,.161.38H9.006a2.737,2.737,0,0,0,.161-.381ZM17.438,18.15a2.255,2.255,0,0,1-2.245,2.1H8.807a2.255,2.255,0,0,1-2.245-2.1L5.8,6.75h.757a2.783,2.783,0,0,0,.317-.025A.736.736,0,0,0,7,6.75H17a.736.736,0,0,0,.124-.025,2.783,2.783,0,0,0,.317.025H18.2ZM14.75,11v5a.75.75,0,0,1-1.5,0V11a.75.75,0,0,1,1.5,0Zm-4,0v5a.75.75,0,0,1-1.5,0V11a.75.75,0,0,1,1.5,0Z\"\n          />\n        </g>\n      </svg>\n  );\n};\n\nexport default TrashIcon;\n",{"ruleId":"216","severity":1,"message":"217","line":2,"column":40,"nodeType":"218","messageId":"219","endLine":2,"endColumn":44},{"ruleId":"216","severity":1,"message":"220","line":2,"column":46,"nodeType":"218","messageId":"219","endLine":2,"endColumn":53},{"ruleId":"216","severity":1,"message":"221","line":13,"column":17,"nodeType":"218","messageId":"219","endLine":13,"endColumn":30},{"ruleId":"216","severity":1,"message":"222","line":20,"column":10,"nodeType":"218","messageId":"219","endLine":20,"endColumn":20},{"ruleId":"216","severity":1,"message":"223","line":11,"column":9,"nodeType":"218","messageId":"219","endLine":11,"endColumn":13},{"ruleId":"216","severity":1,"message":"224","line":28,"column":7,"nodeType":"218","messageId":"219","endLine":28,"endColumn":11},{"ruleId":"216","severity":1,"message":"225","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"216","severity":1,"message":"226","line":11,"column":22,"nodeType":"218","messageId":"219","endLine":11,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":45,"column":21,"nodeType":"229","endLine":45,"endColumn":74},{"ruleId":"230","severity":1,"message":"231","line":58,"column":73,"nodeType":"232","messageId":"233","endLine":58,"endColumn":75},{"ruleId":"216","severity":1,"message":"234","line":3,"column":9,"nodeType":"218","messageId":"219","endLine":3,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":46,"column":24,"nodeType":"232","messageId":"233","endLine":46,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":46,"column":49,"nodeType":"232","messageId":"233","endLine":46,"endColumn":51},{"ruleId":"230","severity":1,"message":"231","line":46,"column":70,"nodeType":"232","messageId":"233","endLine":46,"endColumn":72},{"ruleId":"230","severity":1,"message":"231","line":46,"column":92,"nodeType":"232","messageId":"233","endLine":46,"endColumn":94},{"ruleId":"235","severity":1,"message":"236","line":105,"column":10,"nodeType":"229","messageId":"237","endLine":105,"endColumn":25},{"ruleId":"216","severity":1,"message":"238","line":1,"column":21,"nodeType":"218","messageId":"219","endLine":1,"endColumn":27},{"ruleId":"216","severity":1,"message":"239","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":18},{"ruleId":"216","severity":1,"message":"240","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":16},{"ruleId":"216","severity":1,"message":"241","line":12,"column":7,"nodeType":"218","messageId":"219","endLine":12,"endColumn":23},{"ruleId":"216","severity":1,"message":"242","line":15,"column":7,"nodeType":"218","messageId":"219","endLine":15,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":20,"column":90,"nodeType":"232","messageId":"245","endLine":20,"endColumn":91},{"ruleId":"216","severity":1,"message":"246","line":45,"column":16,"nodeType":"218","messageId":"219","endLine":45,"endColumn":21},{"ruleId":"216","severity":1,"message":"247","line":66,"column":9,"nodeType":"218","messageId":"219","endLine":66,"endColumn":17},{"ruleId":"216","severity":1,"message":"248","line":68,"column":10,"nodeType":"218","messageId":"219","endLine":68,"endColumn":18},{"ruleId":"216","severity":1,"message":"249","line":68,"column":20,"nodeType":"218","messageId":"219","endLine":68,"endColumn":31},{"ruleId":"216","severity":1,"message":"226","line":69,"column":20,"nodeType":"218","messageId":"219","endLine":69,"endColumn":31},{"ruleId":"216","severity":1,"message":"250","line":76,"column":10,"nodeType":"218","messageId":"219","endLine":76,"endColumn":23},{"ruleId":"216","severity":1,"message":"251","line":76,"column":25,"nodeType":"218","messageId":"219","endLine":76,"endColumn":41},{"ruleId":"216","severity":1,"message":"252","line":80,"column":10,"nodeType":"218","messageId":"219","endLine":80,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":99,"column":6,"nodeType":"255","endLine":99,"endColumn":19,"suggestions":"256"},{"ruleId":"230","severity":1,"message":"231","line":104,"column":49,"nodeType":"232","messageId":"233","endLine":104,"endColumn":51},{"ruleId":"230","severity":1,"message":"231","line":104,"column":94,"nodeType":"232","messageId":"233","endLine":104,"endColumn":96},{"ruleId":"253","severity":1,"message":"257","line":107,"column":6,"nodeType":"255","endLine":107,"endColumn":27,"suggestions":"258"},{"ruleId":"253","severity":1,"message":"259","line":142,"column":6,"nodeType":"255","endLine":142,"endColumn":40,"suggestions":"260"},{"ruleId":"216","severity":1,"message":"261","line":145,"column":5,"nodeType":"218","messageId":"219","endLine":145,"endColumn":6},{"ruleId":"262","severity":1,"message":"263","line":160,"column":35,"nodeType":"264","messageId":"265","endLine":160,"endColumn":37},{"ruleId":"262","severity":1,"message":"263","line":160,"column":51,"nodeType":"264","messageId":"265","endLine":160,"endColumn":53},{"ruleId":"262","severity":1,"message":"263","line":160,"column":66,"nodeType":"264","messageId":"265","endLine":160,"endColumn":68},{"ruleId":"262","severity":1,"message":"263","line":160,"column":83,"nodeType":"264","messageId":"265","endLine":160,"endColumn":85},{"ruleId":"262","severity":1,"message":"266","line":162,"column":41,"nodeType":"264","messageId":"265","endLine":162,"endColumn":43},{"ruleId":"262","severity":1,"message":"266","line":162,"column":73,"nodeType":"264","messageId":"265","endLine":162,"endColumn":75},{"ruleId":"253","severity":1,"message":"267","line":210,"column":4,"nodeType":"255","endLine":210,"endColumn":16,"suggestions":"268"},{"ruleId":"230","severity":1,"message":"231","line":230,"column":31,"nodeType":"232","messageId":"233","endLine":230,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":241,"column":84,"nodeType":"232","messageId":"245","endLine":241,"endColumn":85},{"ruleId":"243","severity":1,"message":"244","line":255,"column":198,"nodeType":"232","messageId":"245","endLine":255,"endColumn":199},{"ruleId":"230","severity":1,"message":"231","line":255,"column":218,"nodeType":"232","messageId":"233","endLine":255,"endColumn":220},{"ruleId":"230","severity":1,"message":"231","line":303,"column":18,"nodeType":"232","messageId":"233","endLine":303,"endColumn":20},{"ruleId":"216","severity":1,"message":"269","line":4,"column":16,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"216","severity":1,"message":"270","line":4,"column":35,"nodeType":"218","messageId":"219","endLine":4,"endColumn":44},{"ruleId":"216","severity":1,"message":"224","line":20,"column":5,"nodeType":"218","messageId":"219","endLine":20,"endColumn":9},{"ruleId":"230","severity":1,"message":"271","line":31,"column":176,"nodeType":"232","messageId":"233","endLine":31,"endColumn":178},{"ruleId":"216","severity":1,"message":"272","line":36,"column":22,"nodeType":"218","messageId":"219","endLine":36,"endColumn":33},{"ruleId":"253","severity":1,"message":"273","line":93,"column":6,"nodeType":"255","endLine":93,"endColumn":16,"suggestions":"274"},{"ruleId":"216","severity":1,"message":"275","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":24},{"ruleId":"253","severity":1,"message":"276","line":40,"column":8,"nodeType":"255","endLine":40,"endColumn":25,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":104,"column":15,"nodeType":"229","endLine":104,"endColumn":155},{"ruleId":"216","severity":1,"message":"241","line":7,"column":7,"nodeType":"218","messageId":"219","endLine":7,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":13,"column":90,"nodeType":"232","messageId":"245","endLine":13,"endColumn":91},{"ruleId":"216","severity":1,"message":"280","line":26,"column":10,"nodeType":"218","messageId":"219","endLine":26,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":40,"column":6,"nodeType":"255","endLine":40,"endColumn":19,"suggestions":"281"},{"ruleId":"216","severity":1,"message":"282","line":42,"column":9,"nodeType":"218","messageId":"219","endLine":42,"endColumn":30},{"ruleId":"216","severity":1,"message":"283","line":52,"column":11,"nodeType":"218","messageId":"219","endLine":52,"endColumn":21},{"ruleId":"243","severity":1,"message":"244","line":101,"column":138,"nodeType":"232","messageId":"245","endLine":101,"endColumn":139},{"ruleId":"230","severity":1,"message":"231","line":101,"column":158,"nodeType":"232","messageId":"233","endLine":101,"endColumn":160},{"ruleId":"253","severity":1,"message":"284","line":32,"column":6,"nodeType":"255","endLine":32,"endColumn":8,"suggestions":"285"},{"ruleId":"216","severity":1,"message":"286","line":15,"column":12,"nodeType":"218","messageId":"219","endLine":15,"endColumn":22},{"ruleId":"253","severity":1,"message":"287","line":54,"column":8,"nodeType":"255","endLine":54,"endColumn":65,"suggestions":"288"},{"ruleId":"253","severity":1,"message":"289","line":54,"column":26,"nodeType":"290","endLine":54,"endColumn":64},{"ruleId":"253","severity":1,"message":"289","line":57,"column":4,"nodeType":"290","endLine":57,"endColumn":42},{"ruleId":"216","severity":1,"message":"238","line":1,"column":31,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"216","severity":1,"message":"291","line":4,"column":9,"nodeType":"218","messageId":"219","endLine":4,"endColumn":21},{"ruleId":"216","severity":1,"message":"292","line":4,"column":38,"nodeType":"218","messageId":"219","endLine":4,"endColumn":53},{"ruleId":"230","severity":1,"message":"231","line":12,"column":55,"nodeType":"232","messageId":"233","endLine":12,"endColumn":57},{"ruleId":"253","severity":1,"message":"293","line":50,"column":8,"nodeType":"255","endLine":50,"endColumn":24,"suggestions":"294"},{"ruleId":"216","severity":1,"message":"295","line":73,"column":15,"nodeType":"218","messageId":"219","endLine":73,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":50,"column":25,"nodeType":"232","messageId":"233","endLine":50,"endColumn":27},{"ruleId":"230","severity":1,"message":"231","line":136,"column":38,"nodeType":"232","messageId":"233","endLine":136,"endColumn":40},{"ruleId":"216","severity":1,"message":"234","line":1,"column":9,"nodeType":"218","messageId":"219","endLine":1,"endColumn":18},{"ruleId":"216","severity":1,"message":"296","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":26},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'ExpandMenuBtn' is defined but never used.","'Navigation' is defined but never used.","'auth' is assigned a value but never used.","'host' is assigned a value but never used.","'useAuth' is defined but never used.","'setNavLinks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","react/jsx-pascal-case","Imported JSX component S_LoginComp must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'useRef' is defined but never used.","'Navigate' is defined but never used.","'Calendar' is defined but never used.","'DEFAULT_HABIT_ID' is assigned a value but never used.","'randomString' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'owner' is assigned a value but never used.","'navigate' is assigned a value but never used.","'currNote' is assigned a value but never used.","'setCurrNote' is assigned a value but never used.","'calendarStyle' is assigned a value but never used.","'setCalendarStyle' is assigned a value but never used.","'todayNoteExist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array.","ArrayExpression",["297"],"React Hook useEffect has a missing dependency: 'currHabit'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'currHabit', 'newNote', and 'notes'. Either include them or remove the dependency array.",["299"],"'c' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","React Hook useEffect has a missing dependency: 'updateNoteDB'. Either include it or remove the dependency array.",["300"],"'json' is defined but never used.","'useParams' is defined but never used.","Expected '!==' and instead saw '!='.","'setNavError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currHabit' and 'makeHabit'. Either include them or remove the dependency array.",["301"],"'SharedProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'meUser.username' and 'username'. Either include them or remove the dependency array.",["302"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'error' is assigned a value but never used.",["303"],"'convertToCalendarDate' is assigned a value but never used.","'fetchHabit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'host'. Either include it or remove the dependency array.",["304"],"'fetchError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navLinks'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'FaCommentAlt' is defined but never used.","'FaRegCommentAlt' is defined but never used.","React Hook useEffect has a missing dependency: 'noteId'. Either include it or remove the dependency array.",["306"],"'delCom' is assigned a value but never used.","'useSharedContext' is defined but never used.",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"307","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [calendarVal, notes]",{"range":"326","text":"327"},"Update the dependencies array to be: [currHabit, navLinks, params.id]",{"range":"328","text":"329"},"Update the dependencies array to be: [currHabit, currHabit.makeHabit, newNote, notes, reloadNotes]",{"range":"330","text":"331"},"Update the dependencies array to be: [saveStatus, updateNoteDB]",{"range":"332","text":"333"},"Update the dependencies array to be: [currHabit, makeHabit, navLinks]",{"range":"334","text":"335"},"Update the dependencies array to be: [meUser.username, params.username, username]",{"range":"336","text":"337"},{"range":"338","text":"327"},"Update the dependencies array to be: [host]",{"range":"339","text":"340"},"Update the dependencies array to be: [isAuthenticated, navLinks]",{"range":"341","text":"342"},"Update the dependencies array to be: [noteId, reloadComments]",{"range":"343","text":"344"},[3771,3784],"[calendarVal, notes]",[4059,4080],"[currHabit, navLinks, params.id]",[5306,5340],"[currHabit, currHabit.makeHabit, newNote, notes, reloadNotes]",[7376,7388],"[saveStatus, updateNoteDB]",[3934,3944],"[currHabit, makeHabit, navLinks]",[1703,1720],"[meUser.username, params.username, username]",[1563,1576],[1114,1116],"[host]",[1882,1939],"[isAuthenticated, navLinks]",[1724,1740],"[noteId, reloadComments]"]