{"ast":null,"code":"import _toConsumableArray from\"/Users/gyurmeydorj/Habituall/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/gyurmeydorj/Habituall/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useEffect,useState}from'react';import{backendAPI}from'../clientDotEnv';import{useAuth}from'./AuthContext';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var host=backendAPI;// Create a context\nvar SharedContext=/*#__PURE__*/createContext();// Create a provider component\nvar SharedProvider=function SharedProvider(_ref){var children=_ref.children;var location=useLocation();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),navLinks=_useState2[0],setNavLinks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fetchError=_useState4[0],setFetchError=_useState4[1];var _useAuth=useAuth(),isAuthenticated=_useAuth.isAuthenticated;// const [hi, ]\nuseEffect(function(){var habits=[];fetch(host+'/api/habits',{credentials:\"include\"}).then(function(a){if(!a.ok){// setNavError(true); \nsetFetchError(true);console.log(\"fetchError\");// throw new Error('unable to fetch list of habits');\nreturn{error:\"habit list fetch error\"};}return a.json();}).then(function(jsonObj){console.log(jsonObj,\"useEffect fetch api habits called\");if(jsonObj.error)return Promise.resolve();// console.log(jsonObj, \"useEffect fetch api habits resolved\")\n/**\n                 * response looks like this:\n                 * {\n                 * message: \"docs fetched\",\n                 * _id: \"\",\n                 * habits: {habits: [{..}, {..}], userId: \"\" }\n                 * }\n                 */habits=_toConsumableArray(jsonObj.habits[0].habits);setNavLinks(habits);console.log(jsonObj.habits,\"sc\",navLinks);//set \n}).catch(function(e){throw new Error(e);});},[isAuthenticated,location.pathname.split(\"/habits/\")[1]]);useEffect(function(){console.log(\"href changed only\");},[location.pathname.split(\"/habits/\")[1]]);return/*#__PURE__*/ (// <SharedContext.Provider value={{currHabitProvided: [currHabit, setCurrHabit]}}>\n_jsx(SharedContext.Provider,{value:{navLinks:navLinks,setNavLinks:setNavLinks},children:children}));};// Create a custom hook to use the context\nvar useSharedContext=function useSharedContext(){return useContext(SharedContext);};export{SharedProvider,useSharedContext};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","backendAPI","useAuth","useLocation","jsx","_jsx","host","SharedContext","SharedProvider","_ref","children","location","_useState","_useState2","_slicedToArray","navLinks","setNavLinks","_useState3","_useState4","fetchError","setFetchError","_useAuth","isAuthenticated","habits","fetch","credentials","then","a","ok","console","log","error","json","jsonObj","Promise","resolve","_toConsumableArray","catch","e","Error","pathname","split","Provider","value","useSharedContext"],"sources":["/Users/gyurmeydorj/Habituall/client/src/context/SharedContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { backendAPI } from '../clientDotEnv';\nimport { useAuth } from './AuthContext';\nimport { useLocation } from 'react-router-dom';\n\n\nconst host = backendAPI;\n// Create a context\nconst SharedContext = createContext();\n\n// Create a provider component\nconst SharedProvider = ({ children }) => {\n    let location = useLocation();\n    const [navLinks, setNavLinks] = useState([]);\n    const [fetchError, setFetchError] = useState(false);\n    let {isAuthenticated} = useAuth();\n    // const [hi, ]\n    useEffect(() => {\n        let habits = [];\n\n        fetch(host+'/api/habits', {credentials: \"include\"})\n            .then(a => {\n                if(!a.ok){\n                    // setNavError(true); \n                    setFetchError(true);\n                    console.log(\"fetchError\");\n                    // throw new Error('unable to fetch list of habits');\n                    return {error: \"habit list fetch error\"}\n                }\n                return a.json();\n            })\n            .then(jsonObj => {\n                console.log(jsonObj, \"useEffect fetch api habits called\")\n                if(jsonObj.error) return Promise.resolve();\n                // console.log(jsonObj, \"useEffect fetch api habits resolved\")\n                /**\n                 * response looks like this:\n                 * {\n                 * message: \"docs fetched\",\n                 * _id: \"\",\n                 * habits: {habits: [{..}, {..}], userId: \"\" }\n                 * }\n                 */\n\n                habits = [...jsonObj.habits[0].habits]; \n                setNavLinks(habits);              \n                \n                console.log(jsonObj.habits, \"sc\", navLinks)\n                //set \n            })\n            .catch(e => {\n                throw new Error(e);\n            });\n    }, [isAuthenticated, location.pathname.split(\"/habits/\")[1]]);\nuseEffect(() =>{\nconsole.log(\"href changed only\")\n},[location.pathname.split(\"/habits/\")[1]])\n    return (\n        // <SharedContext.Provider value={{currHabitProvided: [currHabit, setCurrHabit]}}>\n        <SharedContext.Provider value={{navLinks, setNavLinks}}>\n            {children}\n        </SharedContext.Provider>\n    );\n};\n\n// Create a custom hook to use the context\nconst useSharedContext = () => {\n    return useContext(SharedContext);\n};\n\nexport {SharedProvider, useSharedContext}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}