{"ast":null,"code":"var _jsxFileName = \"/Users/gyurmeydorj/Habituall/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = AuthContext;\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(false);\n  const [loading, setLoading] = useState(true); // New loading state\n  let host = 'http://localhost:3001';\n  // host = 'http://192.168.1.147:3001'\n  // host = \"http://\"+require(\"os\").networkInterfaces()['en0'][1].address+\":3001\"; // comment line if not working on separate window\n\n  useEffect(() => {\n    async function checkIfUserIsLoggedIn() {\n      try {\n        // really needed so that the Component isn't rendered before the loginCheck is completed\n        let response = await fetch(host + \"/api/login\", {\n          credentials: \"include\"\n        });\n        if (!response.ok) {\n          throw new Error(\"Unauthenticated\");\n        }\n        let fetchedUser = await response.json();\n        setUser(fetchedUser);\n      } catch (error) {\n        setUser(false);\n      } finally {\n        setLoading(false); // Set loading to false when the check is complete\n      }\n    }\n    checkIfUserIsLoggedIn();\n  }, []);\n  if (loading) {\n    // Render a loading state while the authentication check is in progress\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  const authenticate = async (username, password) => {\n    let response = await fetch(host + \"/api/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Login Failed\");\n    }\n    let loggedInUser = await response.json();\n    setUser({\n      ...loggedInUser,\n      password: null\n    }); // prevent the password from being sent\n\n    return loggedInUser;\n  };\n  const register = async (username, password, name, motto) => {\n    let response = await fetch(host + \"/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        motto\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Register Failed\");\n    }\n  };\n  const signout = async () => {\n    let response = await fetch(host + \"/api/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    console.log(response);\n    if (!response.ok) {\n      throw new Error(\"Logout Failed\");\n    }\n    let body = await response.json();\n    setUser(false);\n    return body;\n  };\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      authenticate,\n      register,\n      signout,\n      isAuthenticated: user ? true : false,\n      // isAuthenticated: true,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n// Create our own hook for accessing the context from any functional component\n_s(AuthProvider, \"j6QBBy4yO8ZK+SOo2AJD23T+Hsc=\");\n_c = AuthProvider;\nfunction useAuth() {\n  _s2();\n  return React.useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useAuth, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","AuthContext","Provider","AuthProvider","_ref","_s","children","user","setUser","loading","setLoading","host","checkIfUserIsLoggedIn","response","fetch","credentials","ok","Error","fetchedUser","json","error","fileName","_jsxFileName","lineNumber","columnNumber","authenticate","username","password","method","body","JSON","stringify","headers","loggedInUser","register","name","motto","signout","console","log","value","isAuthenticated","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["/Users/gyurmeydorj/Habituall/client/src/context/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nconst AuthContext = createContext();\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(false);\n  const [loading, setLoading] = useState(true); // New loading state\n  let host = 'http://localhost:3001';\n  // host = 'http://192.168.1.147:3001'\n  // host = \"http://\"+require(\"os\").networkInterfaces()['en0'][1].address+\":3001\"; // comment line if not working on separate window\n\n  useEffect(() => {\n    async function checkIfUserIsLoggedIn() {\n      try { // really needed so that the Component isn't rendered before the loginCheck is completed\n        let response = await fetch(host + \"/api/login\", { credentials: \"include\" });\n\n        if (!response.ok) {\n          throw new Error(\"Unauthenticated\");\n        }\n\n        let fetchedUser = await response.json();\n        setUser(fetchedUser);\n      } catch (error) {\n        setUser(false);\n      } finally {\n        setLoading(false); // Set loading to false when the check is complete\n      }\n    }\n\n    checkIfUserIsLoggedIn();\n  }, []);\n\n  if (loading) {\n    // Render a loading state while the authentication check is in progress\n    return <div>Loading...</div>;\n  }\n\n  const authenticate = async (username, password) => {\n    let response = await fetch(host+\"/api/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n\n\n    if (!response.ok) {\n      throw new Error(\"Login Failed\");\n    }\n\n    let loggedInUser = await response.json();\n    setUser({...loggedInUser, password: null}); // prevent the password from being sent\n\n\n    return loggedInUser;\n  };\n\n  \n  const register = async (username, password, name, motto) => {\n    let response = await fetch(host+\"/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password ,name, motto }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Register Failed\");\n    }\n  };\n\n  const signout = async () => {\n    let response = await fetch(host+\"/api/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\"\n    });\n    console.log(response)\n    if (!response.ok) {\n      throw new Error(\"Logout Failed\");\n    }\n\n    let body = await response.json();\n    setUser(false);\n\n    return body;\n  };\n\n  return (\n    <Provider\n      value={{\n        authenticate,\n        register,\n        signout,\n        isAuthenticated: user ? true : false,\n        // isAuthenticated: true,\n        user\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\n// Create our own hook for accessing the context from any functional component\nfunction useAuth() {\n  return React.useContext(AuthContext);\n}\n\nexport { useAuth, AuthProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}