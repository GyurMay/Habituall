{"ast":null,"code":"var _jsxFileName = \"/Users/gyurmeydorj/Habituall/client/src/pages/ShowHabitPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { useSharedContext } from \"../context/SharedContext\";\nimport habitService from \"../services/habitService\";\nimport TrashIcon from \"../components/icons/TrashIcon\";\nimport CommentElem from \"../components/CommentElem\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { CalendarComp } from \"../components/CalendarComp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_HABIT_ID = 100;\nlet currDate = new Date();\ncurrDate = currDate.toDateString();\nconst randomString = length => Array.from({\n  length\n}, () => Math.random().toString(36).charAt(2)).join('');\nconst Tick = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habitDone mb-1 w-[40px]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-[40px] items-center justify-center rounded-full bg-lime-500\" + \" \" + (props.done ? \"note_status\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        x: \"0px\",\n        y: \"0px\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 20.292969 5.2929688 L 9 16.585938 L 4.7070312 12.292969 L 3.2929688 13.707031 L 9 19.414062 L 21.707031 6.7070312 L 20.292969 5.2929688 z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_c = Tick;\nconst calendarStyleAppend = note => {\n  const convertToCalendarDate = dateStr => {\n    const date = new Date(dateStr);\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  const calendarStyle = `[aria-label=\"${convertToCalendarDate(note.date)}\"] { \n      color: ${note.done ? 'green' : 'red'};\n      border: 3px solid ${note.done ? 'green' : 'red'};\n    }`;\n  return calendarStyle;\n};\nconst HabitNote = props => {\n  const {\n    note,\n    owner,\n    experimental,\n    submitNote\n  } = props;\n  const [customDate, setCustomDate] = props.customDate || [null, null];\n  let noteDate = note.date;\n  return new Date().toDateString() !== noteDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habitNote_text text-md flex h-[45px] w-full resize-none items-end justify-start border-b-2 border-b-gray-200 focus:outline-none\",\n      children: note.note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"textarea\",\n      placeholder: \"any note for today?\",\n      className: \"habitNote text-md flex h-[45px] w-full resize-none items-end justify-start border-dashed border-b-2 border-b-black focus:outline-none\",\n      defaultValue: note.note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), experimental && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: customDate,\n      onChange: e => setCustomDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitNote,\n      className: \"btn btn-primary mt-2 flex\",\n      children: \"SAVE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = HabitNote;\nfunction ShowHabitPage(props) {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const [currNote, setCurrNote] = useState('');\n  const {\n    navLinks,\n    setNavLinks\n  } = useSharedContext();\n  let newNote = {\n    \"date\": new Date().toDateString(),\n    \"note\": \"\",\n    \"done\": undefined\n  };\n  const [noteObj, setNoteObj] = useState(newNote);\n  const [calendarStyle, setCalendarStyle] = useState(``);\n  const [notes, setNotes] = useState([]);\n  const [reloadNotes, setReloadNotes] = useState(false);\n  const [todayNoteExist, setTodayNoteExist] = useState(false);\n  const [currHabit, setCurrHabit] = useState({\n    makeHabit: '1'\n  });\n  const [customDate, setCustomDate] = useState(\"\");\n  const [calendarVal, calendarChange] = useState(new Date());\n  useEffect(() => {\n    const date = calendarVal.toDateString();\n    let dateIsLogged = false;\n    notes.forEach(x => {\n      if (x.date === date) dateIsLogged = true;\n    });\n    if (!dateIsLogged) return;\n    document.location.href = '#' + date;\n    return () => {};\n  }, [calendarVal]);\n  useEffect(() => {\n    console.log(navLinks, \"navlink 1\");\n    let currhb = navLinks.find(x => x.makeHabit == params.id) ? navLinks.find(x => x.makeHabit == params.id) : [];\n    setCurrHabit(currhb);\n    console.log(\"params.id changed\", params.id, currHabit);\n  }, [navLinks, params.id]);\n  useEffect(() => {\n    //loadNote upon navbar habit being clicked\n    const fetchNotes = async () => {\n      const notes = await habitService.loadNotes(currHabit.makeHabit);\n      // console.log(notes, \"notes fethced 2\")\n      const notes2 = await notes.json();\n      console.log(\"notes fetched 2\", notes2);\n      if (notes2[0]) {\n        setNotes(notes2[0].notes);\n        setTodaysNote(notes2[0].notes); //not a state\n      }\n    };\n    fetchNotes();\n    console.log(currHabit, \"currHabit makeHabit changed\", notes);\n    const setTodaysNote = notes => {\n      let todaysNoteUndefined = (notes === null || notes === void 0 ? void 0 : notes.find(x => new Date(x.date).toDateString() === currDate)) === undefined;\n      if (todaysNoteUndefined) {\n        setNoteObj(newNote);\n        setNotes(notes => [...notes, newNote]);\n        return;\n      }\n      console.log(\"notes exists, setting todays note\", notes, todaysNoteUndefined);\n      setTodayNoteExist(true);\n      //else set the found note as todays note\n      setNoteObj(\n      //find if todays note if exist, else create new empty note el\n      notes.find(x => new Date(x.date).toDateString() === currDate));\n    };\n    return () => {\n      setReloadNotes(false);\n    };\n  }, [currHabit.makeHabit, reloadNotes]);\n  let c = 0;\n\n  // useEffect(() => {\n  //   console.log(noteObj, \"new habit uf\", c++)\n  // }, [noteObj.note, noteObj.tick]);\n\n  const [saveStatus, setSaveStatus] = useState(false);\n  const logDay = (state, habitDate) => {\n    if (habitDate !== currDate) return;\n    let markedDone = state === \"tick\";\n    saveNote();\n\n    // if(props.id == \"today\") habit = noteObj; \n\n    const saveStatus = () => {\n      if (noteObj.done === undefined || noteObj.done && !markedDone || !noteObj.done && markedDone) {\n        setNoteObj(noteObj => ({\n          ...noteObj,\n          \"done\": markedDone\n        }));\n      } else if (noteObj.done !== undefined && noteObj.done && markedDone || !noteObj.done && state !== \"tick\") {\n        setNoteObj(noteObj => ({\n          ...noteObj,\n          \"done\": undefined\n        }));\n      }\n    };\n    saveStatus();\n  };\n  const updateNoteDB = async () => {\n    //this is the client side logic\n    // const currNoteInx = currHabit.notes.findIndex(x => x.date === noteObj.date);\n    // const newHabit = currHabit;\n    // if(currNoteInx == -1){\n    //   newHabit.notes.push(noteObj);\n    // }else{\n    //   newHabit.notes[currNoteInx] = noteObj;\n    // }\n    // console.log(\"new Habit will be\", currHabit.notes[currNoteInx], newHabit);\n    // console.log(\"new habit navlink\", navLinks )  \n    // habitService.updateHabit(currHabit.habitId, newHabit); //calling server logic\n    console.log(\"noteObj updating\", noteObj);\n    if (customDate !== \"\") noteObj.date = new Date(customDate).toDateString();\n    const resp = await habitService.createNote(noteObj, currHabit.makeHabit);\n    if (resp.ok) {\n      setReloadNotes(true);\n      return;\n    }\n    console.error(resp, \"note not created\");\n  };\n  const saveNote = () => {\n    setNoteObj(noteObj => ({\n      ...noteObj,\n      \"note\": document.querySelector('#textarea').value\n    }));\n    console.log(\"new Habit saveNOte\", noteObj);\n  };\n  const submitNote = () => {\n    saveNote();\n    setSaveStatus(true);\n  };\n  useEffect(() => {\n    if (saveStatus) {\n      updateNoteDB();\n    }\n    return () => {\n      setSaveStatus(false);\n      console.log(\"cleanup called\", saveStatus);\n    };\n  }, [saveStatus]);\n  const experimental = false;\n  const deleteNote = async (makeHabit, noteId) => {\n    const resp = await habitService.deleteNote(makeHabit, noteId);\n    if (resp.ok /*&& resp.json().modifiedCount == */) {\n      console.log(\"note deleted\", noteId);\n      // setNotes(notes => ...notes);\n      setReloadNotes(true);\n    }\n  };\n  const HabitElem = props => {\n    let habit = props.habit;\n    // const {className} = props;\n    const todaysNote = props.id == \"today\";\n    let today = false;\n    if (todaysNote) {\n      habit = noteObj;\n      today = true;\n    }\n    console.log(habit, \"habitelem habit\", currHabit.makeHabit);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: habit.date,\n        className: props.className + ` ${today ? 'text-white' : ''} ` + \" m-4 mt-8 flex h-auto flex-row rounded-md border-2 p-2 \" + (habit.done ? \"habitDone\" : \"habitMissed\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-5/6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"habitDate border-l-black border-4  font-bold flex h-[45px] items-center justify-center border-transparent text-center align-middle\",\n            children: habit.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(HabitNote, {\n            submitNote: submitNote,\n            customDate: [customDate, setCustomDate],\n            experimental: experimental,\n            note: habit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-1/6 flex-col items-center justify-center border-0 border-black\",\n          children: [!todaysNote && /*#__PURE__*/_jsxDEV(TrashIcon, {\n            onClick: () => deleteNote(currHabit.makeHabit, habit.noteId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"habitDone\",\n            id: 'tick' + habit.date,\n            onClick: () => logDay('tick', habit.date),\n            children: /*#__PURE__*/_jsxDEV(Tick, {\n              done: habit.done\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: 'cross' + habit.date,\n            onClick: () => logDay('cross', habit.date),\n            className: \"habitMissed right-9 top-[50px] flex h-[40px] w-[40px] items-center justify-center rounded-full bg-red-400\" + \" \" + (habit.done == false ? \"note_status\" : \"\"),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 5\n        }, this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 3\n      }, this)\n    }, void 0, false);\n  };\n  let calstyle = '';\n  const daysRemaining = Math.floor((new Date(currHabit.dueDate) - new Date()) / (1000 * 60 * 60 * 24));\n  return currHabit && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"makeBreakBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"text-success\",\n            children: \" MAKE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 14\n          }, this), \" \", currHabit.makeHabit, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"text-danger\",\n            children: \" BREAK:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 14\n          }, this), \" \", currHabit.breakHabit, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [new Date(currHabit.createDate).toDateString(), \" - \", new Date(currHabit.dueDate).toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"habitNotesContainer\",\n        children: [notes.map(note => {\n          calstyle += calendarStyleAppend(note);\n          console.log(calstyle, \"calst\");\n          return note.date !== noteObj.date ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(HabitElem, {\n              className: `habitNote ${calendarVal.toDateString() === note.date ? 'selected' : ''}`,\n              habit: note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CommentElem, {\n              noteId: note.noteId\n            }, note.noteId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true) : daysRemaining > 0 && /*#__PURE__*/_jsxDEV(HabitElem, {\n            habit: noteObj,\n            id: \"today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 35\n          }, this);\n        }),\n        // /**if no notes at all */\n        // if(notes.length == 0 && daysRemaining > 0) ? <div>jpt</div> : <></>)\n        notes.length == 0 && daysRemaining > 0 && /*#__PURE__*/_jsxDEV(HabitElem, {\n          habit: noteObj,\n          id: \"today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(CalendarComp, {\n          createDate: currHabit.createDate,\n          dueDate: currHabit.dueDate,\n          calendarStyle: calstyle,\n          calendarState: [calendarVal, calendarChange]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 3\n        }, this), daysRemaining > 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: daysRemaining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 26\n          }, this), \" days left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"due passed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ShowHabitPage, \"K1MN47ywW4YOQ3dXgz4HA7ssDso=\", false, function () {\n  return [useNavigate, useParams, useSharedContext];\n});\n_c3 = ShowHabitPage;\n;\nexport { ShowHabitPage, HabitNote, CalendarComp, calendarStyleAppend };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tick\");\n$RefreshReg$(_c2, \"HabitNote\");\n$RefreshReg$(_c3, \"ShowHabitPage\");","map":{"version":3,"names":["useEffect","useRef","useState","Navigate","useNavigate","useParams","useSharedContext","habitService","TrashIcon","CommentElem","Calendar","CalendarComp","jsxDEV","_jsxDEV","Fragment","_Fragment","DEFAULT_HABIT_ID","currDate","Date","toDateString","randomString","length","Array","from","Math","random","toString","charAt","join","Tick","props","className","children","done","xmlns","x","y","width","height","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","calendarStyleAppend","note","convertToCalendarDate","dateStr","date","options","year","month","day","toLocaleDateString","calendarStyle","HabitNote","owner","experimental","submitNote","customDate","setCustomDate","noteDate","id","placeholder","defaultValue","type","value","onChange","e","target","onClick","_c2","ShowHabitPage","_s","navigate","params","currNote","setCurrNote","navLinks","setNavLinks","newNote","undefined","noteObj","setNoteObj","setCalendarStyle","notes","setNotes","reloadNotes","setReloadNotes","todayNoteExist","setTodayNoteExist","currHabit","setCurrHabit","makeHabit","calendarVal","calendarChange","dateIsLogged","forEach","document","location","href","console","log","currhb","find","fetchNotes","loadNotes","notes2","json","setTodaysNote","todaysNoteUndefined","c","saveStatus","setSaveStatus","logDay","state","habitDate","markedDone","saveNote","updateNoteDB","resp","createNote","ok","error","querySelector","deleteNote","noteId","HabitElem","habit","todaysNote","today","calstyle","daysRemaining","floor","dueDate","breakHabit","createDate","map","calendarState","_c3","$RefreshReg$"],"sources":["/Users/gyurmeydorj/Habituall/client/src/pages/ShowHabitPage.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\"\r\nimport { useSharedContext } from \"../context/SharedContext\";\r\nimport habitService from \"../services/habitService\";\r\nimport TrashIcon from \"../components/icons/TrashIcon\";\r\nimport CommentElem from \"../components/CommentElem\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { CalendarComp } from \"../components/CalendarComp\";\r\n\r\n\r\nconst DEFAULT_HABIT_ID = 100;\r\nlet currDate = new Date();\r\ncurrDate = currDate.toDateString();\r\nconst randomString = length => Array.from({length}, () => Math.random().toString(36).charAt(2)).join('');\r\n\r\nconst Tick = (props) => {\r\n  return (\r\n  <div className=\"habitDone mb-1 w-[40px]\">\r\n    <div className={\"flex h-[40px] items-center justify-center rounded-full bg-lime-500\" + \" \" + (props.done ? \"note_status\" : \"\")}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"\">\r\n        <path d=\"M 20.292969 5.2929688 L 9 16.585938 L 4.7070312 12.292969 L 3.2929688 13.707031 L 9 19.414062 L 21.707031 6.7070312 L 20.292969 5.2929688 z\"></path>\r\n      </svg>\r\n    </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\nconst calendarStyleAppend = (note) => {\r\n    \r\n    const convertToCalendarDate = (dateStr) => {\r\n      const date = new Date(dateStr);\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return date.toLocaleDateString('en-US', options);\r\n    }\r\n\r\n    const calendarStyle = `[aria-label=\"${convertToCalendarDate(note.date)}\"] { \r\n      color: ${note.done ? 'green' : 'red'};\r\n      border: 3px solid ${note.done ? 'green' : 'red'};\r\n    }`;\r\n    return calendarStyle;\r\n};\r\n\r\nconst HabitNote = props => {\r\n  const {note, owner, experimental, submitNote} = props;\r\n  const [customDate, setCustomDate] = props.customDate || [null, null];\r\n  let noteDate = note.date;\r\n  return (\r\n    new Date().toDateString() !== noteDate ?\r\n    <>\r\n      <div className=\"habitNote_text text-md flex h-[45px] w-full resize-none items-end justify-start border-b-2 border-b-gray-200 focus:outline-none\">\r\n        {note.note}\r\n      </div>  \r\n    </>\r\n    :\r\n    <>\r\n      <textarea id=\"textarea\" placeholder=\"any note for today?\" className=\"habitNote text-md flex h-[45px] w-full resize-none items-end justify-start border-dashed border-b-2 border-b-black focus:outline-none\" defaultValue={note.note} ></textarea>\r\n      {experimental && <input type=\"date\" value={customDate} onChange={e => setCustomDate(e.target.value)} />}\r\n      <button onClick={submitNote} className=\"btn btn-primary mt-2 flex\">SAVE</button>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\n function ShowHabitPage(props){\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [currNote, setCurrNote] = useState('')\r\n  const {navLinks, setNavLinks} = useSharedContext();\r\n  let newNote = {\r\n    \"date\": (new Date()).toDateString(),\r\n    \"note\":\"\",\r\n    \"done\": undefined\r\n  };\r\n  const [noteObj, setNoteObj] = useState(newNote);\r\n  const [calendarStyle, setCalendarStyle] = useState(``);\r\n  \r\n  const [notes, setNotes] = useState([]);\r\n  const [reloadNotes, setReloadNotes] = useState(false);\r\n  const [todayNoteExist, setTodayNoteExist] = useState(false);\r\n\r\n  const [currHabit, setCurrHabit] = useState({makeHabit:'1'});\r\n  \r\n  \r\n  const [customDate, setCustomDate] = useState(\"\");\r\n\r\n  const [calendarVal, calendarChange] = useState(new Date());\r\n\r\n\r\n  useEffect(() => {\r\n    const date = calendarVal.toDateString();\r\n    let dateIsLogged = false;\r\n    notes.forEach(x => {\r\n      if(x.date === date) dateIsLogged = true;\r\n    });\r\n    if(!dateIsLogged) return;\r\n    document.location.href = ('#'+date);\r\n    return () => {};\r\n  }, [calendarVal]);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(navLinks, \"navlink 1\")\r\n    let currhb = navLinks.find(x => x.makeHabit == params.id)?navLinks.find(x => x.makeHabit == params.id): [] ;\r\n    setCurrHabit(currhb);\r\n    console.log(\"params.id changed\", params.id, currHabit)\r\n  }, [navLinks, params.id]);\r\n  \r\n  useEffect(() => {  //loadNote upon navbar habit being clicked\r\n    const fetchNotes = async() => {\r\n      const notes = await habitService.loadNotes(currHabit.makeHabit);\r\n      // console.log(notes, \"notes fethced 2\")\r\n      const notes2 = await notes.json();\r\n      console.log(\"notes fetched 2\", notes2)\r\n      if(notes2[0]){\r\n        setNotes(notes2[0].notes);\r\n        setTodaysNote(notes2[0].notes); //not a state\r\n      }\r\n    };\r\n    fetchNotes();\r\n\r\n    console.log(currHabit, \"currHabit makeHabit changed\", notes);\r\n    const setTodaysNote = (notes) => {\r\n      let todaysNoteUndefined = notes?.find(x => (new Date(x.date)).toDateString() === currDate) === undefined;\r\n      if(todaysNoteUndefined){\r\n        setNoteObj(newNote);\r\n        setNotes(notes => [...notes, newNote])\r\n        return;\r\n      }\r\n      console.log(\"notes exists, setting todays note\", notes, todaysNoteUndefined)\r\n\r\n      setTodayNoteExist(true);\r\n      //else set the found note as todays note\r\n      setNoteObj( //find if todays note if exist, else create new empty note el\r\n        notes.find(x => (new Date(x.date)).toDateString() === currDate)\r\n      );\r\n    };\r\n\r\n    return () => {\r\n      setReloadNotes(false)\r\n    }\r\n  }, [currHabit.makeHabit, reloadNotes]);\r\n\r\n  \r\nlet c = 0;\r\n\r\n// useEffect(() => {\r\n//   console.log(noteObj, \"new habit uf\", c++)\r\n// }, [noteObj.note, noteObj.tick]);\r\n\r\nconst [saveStatus, setSaveStatus] = useState(false);\r\nconst logDay = (state, habitDate) => {\r\n  if(habitDate !== currDate) return\r\n  let markedDone = state === \"tick\"; \r\n  saveNote();\r\n \r\n  // if(props.id == \"today\") habit = noteObj; \r\n\r\n  const saveStatus = () => {\r\n    if(noteObj.done === undefined || noteObj.done && !markedDone || !noteObj.done && markedDone){\r\n      setNoteObj(noteObj => ({ ...noteObj, \"done\": markedDone}));\r\n    }else if(noteObj.done !== undefined && (noteObj.done && markedDone) || (!noteObj.done && state !== \"tick\")){\r\n      setNoteObj(noteObj => ({...noteObj, \"done\" : undefined}))\r\n    }\r\n  }\r\n  saveStatus();\r\n};\r\n\r\nconst updateNoteDB = async () => {\r\n\r\n  //this is the client side logic\r\n  // const currNoteInx = currHabit.notes.findIndex(x => x.date === noteObj.date);\r\n  // const newHabit = currHabit;\r\n  // if(currNoteInx == -1){\r\n  //   newHabit.notes.push(noteObj);\r\n  // }else{\r\n  //   newHabit.notes[currNoteInx] = noteObj;\r\n  // }\r\n  // console.log(\"new Habit will be\", currHabit.notes[currNoteInx], newHabit);\r\n  // console.log(\"new habit navlink\", navLinks )  \r\n  // habitService.updateHabit(currHabit.habitId, newHabit); //calling server logic\r\n  console.log(\"noteObj updating\", noteObj);\r\n  if(customDate !== \"\") noteObj.date = new Date(customDate).toDateString();\r\n  const resp = await habitService.createNote(noteObj, currHabit.makeHabit)\r\n  if(resp.ok){\r\n    setReloadNotes(true)\r\n    return;\r\n  }\r\n  console.error(resp, \"note not created\")\r\n}\r\n\r\n\r\nconst saveNote = () => {\r\n  setNoteObj(noteObj => ({...noteObj, \"note\": document.querySelector('#textarea').value}));\r\n  console.log(\"new Habit saveNOte\", noteObj);\r\n}\r\nconst submitNote = () => {\r\n  saveNote();\r\n  setSaveStatus(true);\r\n}\r\n\r\nuseEffect(() => {\r\n  if(saveStatus){\r\n    updateNoteDB();\r\n  }\r\n  return () => {\r\n    setSaveStatus(false);\r\n    console.log(\"cleanup called\", saveStatus)\r\n  }\r\n}, [saveStatus]);\r\n\r\nconst experimental = false;  \r\n\r\nconst deleteNote = async (makeHabit, noteId) => {\r\n\r\n  const resp = await habitService.deleteNote(makeHabit, noteId);\r\n  if(resp.ok /*&& resp.json().modifiedCount == */){\r\n    console.log(\"note deleted\", noteId);\r\n    // setNotes(notes => ...notes);\r\n    setReloadNotes(true);\r\n\r\n  }\r\n}\r\n\r\n\r\nconst HabitElem = props => {\r\n\r\n  let habit = props.habit;\r\n  // const {className} = props;\r\n  const todaysNote = props.id == \"today\";\r\n  let today = false;\r\n  if(todaysNote){\r\n    habit = noteObj;\r\n    today=true;\r\n  }\r\n\r\n  console.log(habit, \"habitelem habit\", currHabit.makeHabit)\r\n\r\n  return (\r\n    <>\r\n  <div id={habit.date} className={props.className + ` ${today ? 'text-white':''} ` +\" m-4 mt-8 flex h-auto flex-row rounded-md border-2 p-2 \"+(habit.done ? \"habitDone\" : \"habitMissed\")}>\r\n    <div className=\"w-5/6\">\r\n        <div className=\"habitDate border-l-black border-4  font-bold flex h-[45px] items-center justify-center border-transparent text-center align-middle\">\r\n          {habit.date}\r\n        </div>\r\n        <HabitNote submitNote={submitNote} customDate={[customDate, setCustomDate]} experimental={experimental} note={habit}/>\r\n    </div>\r\n\r\n  {/*stands to the side*/}\r\n    <div className=\"flex w-1/6 flex-col items-center justify-center border-0 border-black\">\r\n      {(!todaysNote && <TrashIcon onClick={() => deleteNote(currHabit.makeHabit, habit.noteId)} />)} \r\n      <div className=\"habitDone\" id={'tick'+habit.date} onClick = {() => logDay('tick', habit.date)} >\r\n        <Tick done={habit.done} />\r\n      </div>\r\n      <div id={'cross'+habit.date} onClick={() => logDay('cross', habit.date)} className={\"habitMissed right-9 top-[50px] flex h-[40px] w-[40px] items-center justify-center rounded-full bg-red-400\"+ \" \" + (habit.done == false ? \"note_status\" : \"\")}>\r\n        x\r\n      </div>\r\n      </div>\r\n      \r\n  {props.children}\r\n  </div>\r\n  </>\r\n  );\r\n};\r\n\r\nlet calstyle= '';\r\nconst daysRemaining = (Math.floor(((new Date(currHabit.dueDate)) - (new Date()))/ (1000 * 60 * 60 * 24)));\r\n\r\n  return (   \r\n  (\r\n    currHabit &&\r\n    <>\r\n    <div className = \"container\">\r\n    <div id=\"makeBreakBox\">\r\n        <h2> <strong className=\"text-success\"> MAKE:</strong> {currHabit.makeHabit} </h2> \r\n        <h2> <strong className=\"text-danger\"> BREAK:</strong> {currHabit.breakHabit} </h2>\r\n        <h2>{new Date(currHabit.createDate).toDateString()} - {new Date(currHabit.dueDate).toDateString()}</h2>\r\n    </div>\r\n    <div className=\"habitNotesContainer\">\r\n    \r\n    {\r\n      \r\n    notes.map(note => \r\n      {\r\n        calstyle += (calendarStyleAppend(note))\r\n        console.log(calstyle, \"calst\");\r\n      \r\n      return ((note.date !== noteObj.date) ? ((\r\n        <>\r\n          <HabitElem className={`habitNote ${calendarVal.toDateString() === note.date ? 'selected' :''}`} habit={note}> \r\n          </HabitElem>\r\n          <CommentElem key={note.noteId} noteId={note.noteId} />\r\n        </>\r\n        )\r\n      )\r\n        : ((daysRemaining > 0) && <HabitElem habit={noteObj} id=\"today\"/>)\r\n    )}\r\n    )\r\n  }\r\n  {\r\n    // /**if no notes at all */\r\n    // if(notes.length == 0 && daysRemaining > 0) ? <div>jpt</div> : <></>)\r\n    notes.length == 0 && daysRemaining > 0 && <HabitElem habit={noteObj} id=\"today\" />\r\n  }\r\n  <CalendarComp createDate={currHabit.createDate} dueDate={currHabit.dueDate} calendarStyle={calstyle} calendarState={[calendarVal, calendarChange]} />\r\n  {\r\n  (daysRemaining>0 ? <h1><strong>{daysRemaining}</strong> days left</h1>: <h1>due passed</h1>)\r\n  }        \r\n</div>\r\n</div>\r\n</>\r\n  )\r\n    \r\n    )\r\n};  \r\n\r\nexport {ShowHabitPage, HabitNote, CalendarComp, calendarStyleAppend};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}