{"ast":null,"code":"var _jsxFileName = \"/Users/gyurmeydorj/Habituall/client/src/components/CommentElem.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport habitService from \"../services/habitService\";\nimport TrashIcon from \"./icons/TrashIcon\";\nimport { FaCommentAlt, FaCommentDots, FaRegCommentAlt, FaRegCommentDots } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentElem = props => {\n  _s();\n  const noteId = props.noteId;\n  window.onkeydown = e => {\n    if (e.key === \"Enter\" && e.ctrlKey || e.key === \"Enter\" && e.metaKey) {\n      document.querySelectorAll(\".commentBox\").forEach(x => {\n        let focused = x.querySelector('textarea') == document.activeElement;\n        console.log(document.activeElement);\n        if (focused) {\n          x.querySelector('button').click();\n          return;\n        }\n      });\n      // e.target.parentElement.querySelector('form').submit()\n    }\n  };\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [showComment, setShowComment] = useState(false);\n  const [currUserName, setCurrUserName] = useState('');\n  const [reloadComments, setReloadComments] = useState(false);\n  const commenterStyle = 'commenter ';\n  const commentStyle = 'comment ';\n  const deleteStyle = 'delete ';\n  const getNoteComments = async noteId => {\n    var _coms$comment$;\n    console.log(noteId);\n    const resp = await habitService.getComments(noteId);\n    if (!resp.ok) {\n      setComments([]);\n      return;\n    }\n    const coms = await resp.json();\n    setComments((_coms$comment$ = coms.comment[0]) === null || _coms$comment$ === void 0 ? void 0 : _coms$comment$.comments);\n    setCurrUserName(coms.currUserName);\n  };\n  useEffect(() => {\n    getNoteComments(noteId);\n    return () => {\n      setReloadComments(false);\n    };\n  }, [reloadComments]); // Only depend on reloadComments\n\n  const submitComment = async commentId => {\n    // event.preventDefault();\n\n    console.log(\"submitting comment\", newComment);\n    if (newComment.trim() === \"\") return;\n    const resp = await habitService.comment(newComment, noteId, commentId);\n    if (!resp.ok) {\n      alert(\"error while uploading comment\");\n    }\n    const commentObj = await resp.json();\n    console.log(\"submitcomment commentOBj\", commentObj);\n    if (commentObj.modifiedCount === 0) {\n      alert(\"error while uploading comment\");\n    }\n    setReloadComments(true);\n    setNewComment('');\n  };\n  const deleteComment = async commentId => {\n    const resp = await habitService.deleteComment(commentId, noteId);\n    if (!resp.ok) return;\n    const delCom = await resp.json();\n    setReloadComments(true); // Correct the function call\n  };\n  return showComment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentIcon\",\n      onClick: () => setShowComment(!showComment),\n      children: /*#__PURE__*/_jsxDEV(FaRegCommentDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 88\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentDiv link-primary mb-6 border\",\n        id: noteId,\n        children: comments === null || comments === void 0 ? void 0 : comments.map(c => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commentDivDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: commenterStyle,\n                children: [\"@ \", c.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commentDate\",\n                children: c.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: commentStyle,\n                id: c.commentId,\n                children: c.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: deleteStyle,\n                children: c.name === currUserName && /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  onClick: e => deleteComment(c.commentId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"commentBox block w-full\",\n        onSubmit: submitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type a comment and Enter\",\n          className: \"\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"submit-comment\",\n          className: \"btn btn-secondary\",\n          value: \"submit\",\n          onClick: submitComment,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentIcon\",\n    onClick: () => {\n      setShowComment(!showComment);\n      getNoteComments(noteId);\n    },\n    children: /*#__PURE__*/_jsxDEV(FaCommentDots, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n};\n_s(CommentElem, \"gh35X+9X1F9zPZK+GytMTSCnfKE=\");\n_c = CommentElem;\nexport default CommentElem;\nvar _c;\n$RefreshReg$(_c, \"CommentElem\");","map":{"version":3,"names":["useEffect","useState","useRef","habitService","TrashIcon","FaCommentAlt","FaCommentDots","FaRegCommentAlt","FaRegCommentDots","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentElem","props","_s","noteId","window","onkeydown","e","key","ctrlKey","metaKey","document","querySelectorAll","forEach","x","focused","querySelector","activeElement","console","log","click","comments","setComments","newComment","setNewComment","showComment","setShowComment","currUserName","setCurrUserName","reloadComments","setReloadComments","commenterStyle","commentStyle","deleteStyle","getNoteComments","_coms$comment$","resp","getComments","ok","coms","json","comment","submitComment","commentId","trim","alert","commentObj","modifiedCount","deleteComment","delCom","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","c","name","date","onSubmit","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/Users/gyurmeydorj/Habituall/client/src/components/CommentElem.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport habitService from \"../services/habitService\";\nimport TrashIcon from \"./icons/TrashIcon\";\nimport {FaCommentAlt, FaCommentDots, FaRegCommentAlt, FaRegCommentDots} from \"react-icons/fa\";\n\nconst CommentElem = props => {\n    const noteId = props.noteId;\n\n    window.onkeydown = (e) => {\n        if((e.key === \"Enter\" && (e.ctrlKey)) || (e.key === \"Enter\" && e.metaKey)){\n        document.querySelectorAll(\".commentBox\").forEach(x => {\n            let focused = x.querySelector('textarea') == document.activeElement;\n            console.log(document.activeElement)\n            if (focused){\n                x.querySelector('button').click();\n                return;\n            }\n        })\n        // e.target.parentElement.querySelector('form').submit()\n        }\n    };\n\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [showComment, setShowComment] = useState(false);\n    const [currUserName, setCurrUserName] = useState('');\n    const [reloadComments, setReloadComments] = useState(false);\n\n    const commenterStyle = 'commenter ';\n    const commentStyle = 'comment ';\n    const deleteStyle = 'delete ';\n\n    const getNoteComments = async (noteId) => {\n        console.log(noteId);\n        const resp = await habitService.getComments(noteId);\n        if (!resp.ok) {\n            setComments([]);\n            return;\n        }\n        const coms = await resp.json();\n        setComments(coms.comment[0]?.comments);\n        setCurrUserName(coms.currUserName);\n    };\n\n    useEffect(() => {\n        getNoteComments(noteId);\n        return () => {\n            setReloadComments(false);\n        };\n    }, [reloadComments]); // Only depend on reloadComments\n\n    const submitComment = async ( commentId) => {\n        // event.preventDefault();\n\n        console.log(\"submitting comment\", newComment);\n        if(newComment.trim() === \"\") return;\n        const resp = await habitService.comment(newComment, noteId, commentId);\n        if (!resp.ok) {\n            alert(\"error while uploading comment\")\n        }\n        const commentObj = await resp.json();\n        console.log(\"submitcomment commentOBj\", commentObj);\n        if(commentObj.modifiedCount === 0){\n            alert(\"error while uploading comment\") \n        }\n        setReloadComments(true);\n        setNewComment('');\n    }\n\n    const deleteComment = async (commentId) => {\n        const resp = await habitService.deleteComment(commentId, noteId);\n        if (!resp.ok) return;\n        const delCom = await resp.json();\n        setReloadComments(true); // Correct the function call\n    }\n\n    return (\n        showComment ?\n            <>\n            <div className=\"commentIcon\" onClick={() => setShowComment(!showComment)} ><FaRegCommentDots /></div>\n            <div className=\"theComment\">\n                <div className=\"commentDiv link-primary mb-6 border\" id={noteId}>\n                    {\n                    comments?.map(c => {\n                      return (\n                        <>\n                            <div className=\"commentDivDiv\">\n                                <div className={commenterStyle}>\n                                    @ {c.name}\n                                </div>\n                                <div className=\"commentDate\">{c.date}</div>\n                                <div className={commentStyle} id={c.commentId}>\n                                    {c.comment}\n                                </div>\n                                <div className={deleteStyle}>\n                                    {c.name === currUserName && (<TrashIcon onClick={e => deleteComment(c.commentId)} />)}\n                                </div>\n                            </div>\n                        </>\n                      )\n                    })\n                    }\n                </div>\n                <form className=\"commentBox block w-full\" onSubmit={submitComment}>\n                    <textarea placeholder=\"Type a comment and Enter\" className=\"\" value={newComment} onChange={e => setNewComment(e.target.value)} />\n                    <button type=\"button\" id=\"submit-comment\" className=\"btn btn-secondary\" value=\"submit\" onClick={submitComment}>SUBMIT</button>\n                </form>\n            </div>\n            </> :\n            <div className=\"commentIcon\" onClick={() => { setShowComment(!showComment); getNoteComments(noteId) }}>\n                <FaCommentDots />\n            </div>\n    );\n};\n\nexport default CommentElem;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAAQC,YAAY,EAAEC,aAAa,EAAEC,eAAe,EAAEC,gBAAgB,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9F,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM;EAE3BC,MAAM,CAACC,SAAS,GAAIC,CAAC,IAAK;IACtB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAKD,CAAC,CAACE,OAAQ,IAAMF,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACG,OAAQ,EAAC;MAC1EC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACC,OAAO,CAACC,CAAC,IAAI;QAClD,IAAIC,OAAO,GAAGD,CAAC,CAACE,aAAa,CAAC,UAAU,CAAC,IAAIL,QAAQ,CAACM,aAAa;QACnEC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACM,aAAa,CAAC;QACnC,IAAIF,OAAO,EAAC;UACRD,CAAC,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACI,KAAK,CAAC,CAAC;UACjC;QACJ;MACJ,CAAC,CAAC;MACF;IACA;EACJ,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM0C,cAAc,GAAG,YAAY;EACnC,MAAMC,YAAY,GAAG,UAAU;EAC/B,MAAMC,WAAW,GAAG,SAAS;EAE7B,MAAMC,eAAe,GAAG,MAAO9B,MAAM,IAAK;IAAA,IAAA+B,cAAA;IACtCjB,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;IACnB,MAAMgC,IAAI,GAAG,MAAM7C,YAAY,CAAC8C,WAAW,CAACjC,MAAM,CAAC;IACnD,IAAI,CAACgC,IAAI,CAACE,EAAE,EAAE;MACVhB,WAAW,CAAC,EAAE,CAAC;MACf;IACJ;IACA,MAAMiB,IAAI,GAAG,MAAMH,IAAI,CAACI,IAAI,CAAC,CAAC;IAC9BlB,WAAW,EAAAa,cAAA,GAACI,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,cAAAN,cAAA,uBAAfA,cAAA,CAAiBd,QAAQ,CAAC;IACtCO,eAAe,CAACW,IAAI,CAACZ,YAAY,CAAC;EACtC,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACZ8C,eAAe,CAAC9B,MAAM,CAAC;IACvB,OAAO,MAAM;MACT0B,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACD,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,MAAMa,aAAa,GAAG,MAAQC,SAAS,IAAK;IACxC;;IAEAzB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEI,UAAU,CAAC;IAC7C,IAAGA,UAAU,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC7B,MAAMR,IAAI,GAAG,MAAM7C,YAAY,CAACkD,OAAO,CAAClB,UAAU,EAAEnB,MAAM,EAAEuC,SAAS,CAAC;IACtE,IAAI,CAACP,IAAI,CAACE,EAAE,EAAE;MACVO,KAAK,CAAC,+BAA+B,CAAC;IAC1C;IACA,MAAMC,UAAU,GAAG,MAAMV,IAAI,CAACI,IAAI,CAAC,CAAC;IACpCtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE2B,UAAU,CAAC;IACnD,IAAGA,UAAU,CAACC,aAAa,KAAK,CAAC,EAAC;MAC9BF,KAAK,CAAC,+BAA+B,CAAC;IAC1C;IACAf,iBAAiB,CAAC,IAAI,CAAC;IACvBN,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMwB,aAAa,GAAG,MAAOL,SAAS,IAAK;IACvC,MAAMP,IAAI,GAAG,MAAM7C,YAAY,CAACyD,aAAa,CAACL,SAAS,EAAEvC,MAAM,CAAC;IAChE,IAAI,CAACgC,IAAI,CAACE,EAAE,EAAE;IACd,MAAMW,MAAM,GAAG,MAAMb,IAAI,CAACI,IAAI,CAAC,CAAC;IAChCV,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,OACIL,WAAW,gBACP3B,OAAA,CAAAE,SAAA;IAAAkD,QAAA,gBACApD,OAAA;MAAKqD,SAAS,EAAC,aAAa;MAACC,OAAO,EAAEA,CAAA,KAAM1B,cAAc,CAAC,CAACD,WAAW,CAAE;MAAAyB,QAAA,eAAEpD,OAAA,CAACF,gBAAgB;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrG1D,OAAA;MAAKqD,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBpD,OAAA;QAAKqD,SAAS,EAAC,qCAAqC;QAACM,EAAE,EAAErD,MAAO;QAAA8C,QAAA,EAE5D7B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEqC,GAAG,CAACC,CAAC,IAAI;UACjB,oBACE7D,OAAA,CAAAE,SAAA;YAAAkD,QAAA,eACIpD,OAAA;cAAKqD,SAAS,EAAC,eAAe;cAAAD,QAAA,gBAC1BpD,OAAA;gBAAKqD,SAAS,EAAEpB,cAAe;gBAAAmB,QAAA,GAAC,IAC1B,EAACS,CAAC,CAACC,IAAI;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,aAAa;gBAAAD,QAAA,EAAES,CAAC,CAACE;cAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC3C1D,OAAA;gBAAKqD,SAAS,EAAEnB,YAAa;gBAACyB,EAAE,EAAEE,CAAC,CAAChB,SAAU;gBAAAO,QAAA,EACzCS,CAAC,CAAClB;cAAO;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAElB,WAAY;gBAAAiB,QAAA,EACvBS,CAAC,CAACC,IAAI,KAAKjC,YAAY,iBAAK7B,OAAA,CAACN,SAAS;kBAAC4D,OAAO,EAAE7C,CAAC,IAAIyC,aAAa,CAACW,CAAC,CAAChB,SAAS;gBAAE;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC,gBACR,CAAC;QAEP,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC,eACN1D,OAAA;QAAMqD,SAAS,EAAC,yBAAyB;QAACW,QAAQ,EAAEpB,aAAc;QAAAQ,QAAA,gBAC9DpD,OAAA;UAAUiE,WAAW,EAAC,0BAA0B;UAACZ,SAAS,EAAC,EAAE;UAACa,KAAK,EAAEzC,UAAW;UAAC0C,QAAQ,EAAE1D,CAAC,IAAIiB,aAAa,CAACjB,CAAC,CAAC2D,MAAM,CAACF,KAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjI1D,OAAA;UAAQqE,IAAI,EAAC,QAAQ;UAACV,EAAE,EAAC,gBAAgB;UAACN,SAAS,EAAC,mBAAmB;UAACa,KAAK,EAAC,QAAQ;UAACZ,OAAO,EAAEV,aAAc;UAAAQ,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACJ,CAAC,gBACH1D,OAAA;IAAKqD,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEA,CAAA,KAAM;MAAE1B,cAAc,CAAC,CAACD,WAAW,CAAC;MAAES,eAAe,CAAC9B,MAAM,CAAC;IAAC,CAAE;IAAA8C,QAAA,eAClGpD,OAAA,CAACJ,aAAa;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAElB,CAAC;AAACrD,EAAA,CA5GIF,WAAW;AAAAmE,EAAA,GAAXnE,WAAW;AA8GjB,eAAeA,WAAW;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}