{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/gyurmeydorj/Habituall/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/gyurmeydorj/Habituall/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map) {\n  var _this = this;\n  var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'maxAge';\n  var processingKey;\n  var processingTimer;\n  var processingDeferred;\n  var cleanup = function cleanup() {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _this2 = this;\n      var setupTimer, _iterator, _step, entry;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(processingKey !== undefined)) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 2:\n            setupTimer = function setupTimer(item) {\n              return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var delay;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      processingDeferred = p_defer_1.default();\n                      delay = item[1][property] - Date.now();\n                      if (!(delay <= 0)) {\n                        _context.next = 6;\n                        break;\n                      }\n                      // Remove the item immediately if the delay is equal to or below 0\n                      map.delete(item[0]);\n                      processingDeferred.resolve();\n                      return _context.abrupt(\"return\");\n                    case 6:\n                      // Keep track of the current processed key\n                      processingKey = item[0];\n                      processingTimer = setTimeout(function () {\n                        // Remove the item when the timeout fires\n                        map.delete(item[0]);\n                        if (processingDeferred) {\n                          processingDeferred.resolve();\n                        }\n                      }, delay);\n                      // tslint:disable-next-line:strict-type-predicates\n                      if (typeof processingTimer.unref === 'function') {\n                        // Don't hold up the process from exiting\n                        processingTimer.unref();\n                      }\n                      return _context.abrupt(\"return\", processingDeferred.promise);\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n            };\n            _context2.prev = 3;\n            _iterator = _createForOfIteratorHelper(map);\n            _context2.prev = 5;\n            _iterator.s();\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 13;\n              break;\n            }\n            entry = _step.value;\n            _context2.next = 11;\n            return setupTimer(entry);\n          case 11:\n            _context2.next = 7;\n            break;\n          case 13:\n            _context2.next = 18;\n            break;\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](5);\n            _iterator.e(_context2.t0);\n          case 18:\n            _context2.prev = 18;\n            _iterator.f();\n            return _context2.finish(18);\n          case 21:\n            _context2.next = 25;\n            break;\n          case 23:\n            _context2.prev = 23;\n            _context2.t1 = _context2[\"catch\"](3);\n          case 25:\n            processingKey = undefined;\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[3, 23], [5, 15, 18, 21]]);\n    }));\n  };\n  var reset = function reset() {\n    processingKey = undefined;\n    if (processingTimer !== undefined) {\n      clearTimeout(processingTimer);\n      processingTimer = undefined;\n    }\n    if (processingDeferred !== undefined) {\n      // tslint:disable-line:early-exit\n      processingDeferred.reject(undefined);\n      processingDeferred = undefined;\n    }\n  };\n  var originalSet = map.set.bind(map);\n  map.set = function (key, value) {\n    if (map.has(key)) {\n      // If the key already exist, remove it so we can add it back at the end of the map.\n      map.delete(key);\n    }\n    // Call the original `map.set`\n    var result = originalSet(key, value);\n    // If we are already processing a key and the key added is the current processed key, stop processing it\n    if (processingKey && processingKey === key) {\n      reset();\n    }\n    // Always run the cleanup method in case it wasn't started yet\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return result;\n  };\n  cleanup(); // tslint:disable-line:no-floating-promises\n  return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_regeneratorRuntime","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","p_defer_1","mapAgeCleaner","map","_this","property","arguments","length","undefined","processingKey","processingTimer","processingDeferred","cleanup","mark","_callee2","_this2","setupTimer","_iterator","_step","entry","wrap","_callee2$","_context2","prev","abrupt","item","_callee","delay","_callee$","_context","Date","now","delete","setTimeout","unref","promise","stop","s","n","t0","f","finish","t1","reset","clearTimeout","originalSet","set","bind","key","has","module"],"sources":["/Users/gyurmeydorj/Habituall/client/node_modules/map-age-cleaner/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map, property = 'maxAge') {\n    let processingKey;\n    let processingTimer;\n    let processingDeferred;\n    const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n        if (processingKey !== undefined) {\n            // If we are already processing an item, we can safely exit\n            return;\n        }\n        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {\n            processingDeferred = p_defer_1.default();\n            const delay = item[1][property] - Date.now();\n            if (delay <= 0) {\n                // Remove the item immediately if the delay is equal to or below 0\n                map.delete(item[0]);\n                processingDeferred.resolve();\n                return;\n            }\n            // Keep track of the current processed key\n            processingKey = item[0];\n            processingTimer = setTimeout(() => {\n                // Remove the item when the timeout fires\n                map.delete(item[0]);\n                if (processingDeferred) {\n                    processingDeferred.resolve();\n                }\n            }, delay);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof processingTimer.unref === 'function') {\n                // Don't hold up the process from exiting\n                processingTimer.unref();\n            }\n            return processingDeferred.promise;\n        });\n        try {\n            for (const entry of map) {\n                yield setupTimer(entry);\n            }\n        }\n        catch (_a) {\n            // Do nothing if an error occurs, this means the timer was cleaned up and we should stop processing\n        }\n        processingKey = undefined;\n    });\n    const reset = () => {\n        processingKey = undefined;\n        if (processingTimer !== undefined) {\n            clearTimeout(processingTimer);\n            processingTimer = undefined;\n        }\n        if (processingDeferred !== undefined) { // tslint:disable-line:early-exit\n            processingDeferred.reject(undefined);\n            processingDeferred = undefined;\n        }\n    };\n    const originalSet = map.set.bind(map);\n    map.set = (key, value) => {\n        if (map.has(key)) {\n            // If the key already exist, remove it so we can add it back at the end of the map.\n            map.delete(key);\n        }\n        // Call the original `map.set`\n        const result = originalSet(key, value);\n        // If we are already processing a key and the key added is the current processed key, stop processing it\n        if (processingKey && processingKey === key) {\n            reset();\n        }\n        // Always run the cleanup method in case it wasn't started yet\n        cleanup(); // tslint:disable-line:no-floating-promises\n        return result;\n    };\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}